{"version":3,"sources":["components/Register/Register.module.css","components/Login/Login.module.css","components/layout/Navbar.module.css","App/App.module.css","components/Training/SquareColors/SquareColors.module.css","constants/routes.tsx","components/Firebase/Firebase.tsx","components/Firebase/Context.tsx","components/layout/Navbar.tsx","components/Firebase/Functions.tsx","components/Register/Register.tsx","components/Login/Login.tsx","Chess/HelperFunctions.tsx","Chess/randomSquare.tsx","components/Training/Charts.tsx","components/Training/SquareColors/SquareColors.tsx","components/Training/SquareColors/Startpage.tsx","App/index.tsx","index.tsx"],"names":["module","exports","SIGN_UP","LOG_IN","HOME","SQUARECOLORS","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","currentUser","useAuth","useContext","UserProvider","props","children","useState","setCurrentUser","useEffect","onAuthStateChanged","user","Provider","value","NavbarMod","show","setShow","UserTile","history","useHistory","LoggedIn","DropdownButton","style","marginRight","variant","title","displayName","Dropdown","Item","as","Link","to","ROUTES","onClick","a","signOut","then","push","LoggedOut","Nav","Navbar","Text","className","styles","NavbarText","bar","Toggle","aria-controls","Brand","NavDropdown","id","onMouseEnter","onMouseLeave","schema","yup","shape","Username","required","min","max","terms","isTrue","RegisterForm","validationSchema","validateOnChange","onSubmit","values","actions","username","createUserWithEmailAndPassword","result","resetForm","setSubmitting","updateProfile","catch","error","setFieldError","code","initialValues","handleSubmit","handleChange","errors","isSubmitting","Form","noValidate","Group","controlId","Label","Control","type","name","placeholder","isInvalid","onChange","Feedback","Check","checked","label","feedback","Button","disabled","RegisterPage","Container","Card","bg","text","CardContainer","Body","CardText","Register","LoginForm","signInWithEmailAndPassword","LoginPage","Login","convertToAlgebra","input","stringX","x","String","fromCharCode","charCodeAt","y","whiteColorSquare","xEven","yEven","randomSquare","Math","floor","random","TimeChart","data","fill","color","AreaChart","width","height","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","tick","YAxis","Tooltip","Area","stroke","SquareColors","amount","squares","times","answers","currTimer","currIntervalId","timerStart","setInterval","timerStop","count","state","clearInterval","increase","setState","finish","getConfig","square","position","pieceTheme","buttonColor","colorWhite","correct","whiteSquare","currCorrect","handleKeyPress","event","key","resetState","i","Array","bind","render","document","addEventListener","this","removeEventListener","HeaderStats","HeadText","CurrSquare","CurrentSquare","ChessboardShow","config","chessboard","ShowButton","FooterColorChoose","FooterColorButtons","colorButton","FinishScreen","time","dataRightAnswers","dataWrongAnswers","dataRightIndex","dataWrongIndex","FinishText","round","ButtonContainer","FinishRestart","GraphAll","GraphText","Component","SquareColorStart","start","setStart","App","exact","path","component","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.f1027365.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Register_Container__2nf1n\",\"CardContainer\":\"Register_CardContainer__3srrD\",\"CardText\":\"Register_CardText__31jmS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Login_Container__3nRSH\",\"CardContainer\":\"Login_CardContainer__1UQp9\",\"CardText\":\"Login_CardText__2sGXU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"Navbar_bar__24ZfR\",\"NavbarText\":\"Navbar_NavbarText__3UT7K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"App_Container__Qvkoa\",\"error\":\"App_error__3KXN9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"SquareColors_Container__3STX4\",\"HeadText\":\"SquareColors_HeadText__1Lhx0\",\"CurrentSquare\":\"SquareColors_CurrentSquare__1BDw4\",\"show\":\"SquareColors_show__1l7fX\",\"ChessboardShow\":\"SquareColors_ChessboardShow__1qKIr\",\"chessboard\":\"SquareColors_chessboard__2bqT9\",\"ShowButton\":\"SquareColors_ShowButton__3mKkv\",\"FooterColorButtons\":\"SquareColors_FooterColorButtons__1r3vP\",\"colorButton\":\"SquareColors_colorButton__23crt\",\"FinishScreen\":\"SquareColors_FinishScreen__1GdSd\",\"FinishText\":\"SquareColors_FinishText__2_Rrr\",\"FinishRestart\":\"SquareColors_FinishRestart__2Y7l2\",\"ButtonContainer\":\"SquareColors_ButtonContainer__1b21Z\",\"GraphAll\":\"SquareColors_GraphAll__OVYRz\",\"GraphText\":\"SquareColors_GraphText__28Ew3\"};","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const LOG_IN = '/login';\nexport const HOME = '/home';\n\nexport const SQUARECOLORS = '/squarecolors';\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\n","import React, { ReactElement, useContext, useState, useEffect } from 'react';\nimport type firebase from 'firebase';\nimport { auth } from './Firebase';\n\ninterface UserProviderState {\n  currentUser: firebase.User | null;\n}\n\nconst AuthContext = React.createContext<UserProviderState>({\n  currentUser: null,\n});\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\ninterface UserProviderProps {\n  children: ReactElement;\n}\n\nexport function UserProvider(props: UserProviderProps) {\n  const { children } = props;\n  const [currentUser, setCurrentUser] = useState<firebase.User | null>(null);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n    });\n    return unsubscribe;\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ currentUser }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Navbar,\n  Nav,\n  DropdownButton,\n  Dropdown,\n  NavDropdown,\n} from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport styles from './Navbar.module.css';\nimport * as ROUTES from '../../constants/routes';\nimport { useAuth, signOut } from '../Firebase';\n\nexport function NavbarMod() {\n  const { currentUser } = useAuth();\n  const [show, setShow] = useState(false);\n  const showDropdown = () => {\n    setShow(!show);\n  };\n  const hideDropdown = () => {\n    setShow(false);\n  };\n\n  const UserTile: React.FC = () => {\n    const history = useHistory();\n    const LoggedIn = () => (\n      <DropdownButton\n        style={{ marginRight: '60px' }}\n        variant=\"secondary\"\n        title={currentUser?.displayName}\n      >\n        <Dropdown.Item as={Link} to={ROUTES.HOME}>\n          Home\n        </Dropdown.Item>\n        <Dropdown.Item\n          onClick={async () => {\n            await signOut().then(() => {\n              history.push(ROUTES.HOME);\n            });\n          }}\n        >\n          Log Out\n        </Dropdown.Item>\n      </DropdownButton>\n    );\n\n    const LoggedOut = () => (\n      <Nav>\n        <Navbar.Text as={Link} to={ROUTES.LOG_IN} className={styles.NavbarText}>\n          Log In\n        </Navbar.Text>\n      </Nav>\n    );\n\n    return currentUser ? <LoggedIn /> : <LoggedOut />;\n  };\n\n  return (\n    <Navbar className={styles.bar}>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Brand as={Link} to=\"/\">\n        Something\n      </Navbar.Brand>\n      <NavDropdown\n        title=\"Dropdown\"\n        id=\"collasible-nav-dropdown\"\n        show={show}\n        onMouseEnter={showDropdown}\n        onMouseLeave={hideDropdown}\n      >\n        <NavDropdown.Item\n          as={Link}\n          to={ROUTES.SQUARECOLORS}\n          className={styles.NavbarText}\n        >\n          Square Colors\n        </NavDropdown.Item>\n      </NavDropdown>\n      <Nav className=\"mr-auto\" />\n      <UserTile />\n    </Navbar>\n  );\n}\n","import firebase from 'firebase';\nimport { auth } from './Firebase';\n\n// *** Auth API ***\nexport function createUser(\n  username: string,\n): Promise<firebase.auth.UserCredential> {\n  return auth.createUserWithEmailAndPassword(\n    `${username}@${username}.com`,\n    `${username}@${username}.com`,\n  );\n}\n\nexport function signInWithUsername(\n  username: string,\n): Promise<firebase.auth.UserCredential> {\n  return auth.signInWithEmailAndPassword(\n    `${username}@${username}.com`,\n    `${username}@${username}.com`,\n  );\n}\n\nexport function signInAnonymous(): Promise<firebase.auth.UserCredential> {\n  return auth.signInAnonymously();\n}\n\nexport function signOut(): Promise<void> {\n  return auth.signOut();\n}\n","import React from 'react';\nimport { Form, Button, Card } from 'react-bootstrap';\nimport { Link, useHistory, Redirect } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport * as ROUTES from '../../constants/routes';\nimport styles from './Register.module.css';\nimport { createUser, useAuth } from '../Firebase';\nimport { NavbarMod } from '../layout';\n\nconst schema = yup.object().shape({\n  Username: yup\n    .string()\n    .required()\n    .min(2, 'Username has to be at minimum 2 Characters long')\n    .max(8, 'Username can be at most 8 characters long')\n    .required(\"Username can't be empty\"),\n  terms: yup.bool().isTrue('You have to accept the terms'),\n});\n\nfunction RegisterForm() {\n  const history = useHistory();\n  return (\n    <Formik\n      validationSchema={schema}\n      validateOnChange={false}\n      onSubmit={async (values, actions) => {\n        await createUser(values.Username)\n          .then((result) => {\n            actions.resetForm();\n            actions.setSubmitting(false);\n            result.user?.updateProfile({\n              displayName: values.Username,\n            });\n            history.push(ROUTES.HOME);\n          })\n          .catch((error) => {\n            actions.resetForm();\n            actions.setFieldError('Username', error.code);\n            actions.setSubmitting(false);\n          });\n      }}\n      initialValues={{\n        Username: '',\n        terms: false,\n      }}\n    >\n      {({ handleSubmit, handleChange, values, errors, isSubmitting }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Form.Group controlId=\"Username\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              name=\"Username\"\n              placeholder=\"Enter your Username\"\n              value={values.Username}\n              isInvalid={!!errors.Username}\n              onChange={handleChange}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.Username}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group>\n            <Form.Check\n              required\n              type=\"checkbox\"\n              name=\"terms\"\n              checked={values.terms}\n              label=\"Ich spiele keine Ehrenlosen\"\n              onChange={handleChange}\n              isInvalid={!!errors.terms}\n              feedback={errors.terms}\n            />\n          </Form.Group>\n          <Button className=\"w-100\" type=\"submit\" disabled={isSubmitting}>\n            Sign Up\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nconst RegisterPage = () => {\n  return (\n    <div className={styles.Container}>\n      <NavbarMod />\n      <Card bg=\"Light\" text=\"dark\" className={styles.CardContainer}>\n        <Card.Body>\n          <h2 className={styles.CardText}>Sign Up</h2>\n          <RegisterForm />\n        </Card.Body>\n        <div className={styles.CardText}>\n          Already have an Account? <Link to={ROUTES.LOG_IN}>Log In</Link>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport const Register = () => {\n  const { currentUser } = useAuth();\n  return currentUser ? <Redirect to={ROUTES.HOME} /> : <RegisterPage />;\n};\n","import React from 'react';\nimport { Form, Button, Card } from 'react-bootstrap';\nimport { Link, useHistory, Redirect } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport * as ROUTES from '../../constants/routes';\nimport styles from './Login.module.css';\nimport { signInWithUsername, useAuth } from '../Firebase';\nimport { NavbarMod } from '../layout';\n\nconst schema = yup.object().shape({\n  Username: yup\n    .string()\n    .required()\n    .min(2, 'Username has to be at minimum 2 Characters long')\n    .max(8, 'Username can be at most 8 characters long')\n    .required(\"Username can't be empty\"),\n});\n\nfunction LoginForm() {\n  const history = useHistory();\n  return (\n    <Formik\n      validationSchema={schema}\n      validateOnChange={false}\n      onSubmit={(values, actions) => {\n        signInWithUsername(values.Username)\n          .then(() => {\n            actions.resetForm();\n            actions.setSubmitting(false);\n            history.push(ROUTES.HOME);\n          })\n          .catch((error) => {\n            actions.resetForm();\n            actions.setFieldError('Username', error.code);\n            actions.setSubmitting(false);\n          });\n      }}\n      initialValues={{\n        Username: '',\n      }}\n    >\n      {({ handleSubmit, handleChange, values, errors, isSubmitting }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Form.Group controlId=\"Username\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              name=\"Username\"\n              placeholder=\"Enter your Username\"\n              value={values.Username}\n              isInvalid={!!errors.Username}\n              onChange={handleChange}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.Username}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Button className=\"w-100\" type=\"submit\" disabled={isSubmitting}>\n            Log In\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nconst LoginPage = () => {\n  return (\n    <div className={styles.Container}>\n      <NavbarMod />\n      <Card bg=\"dark\" text=\"light\" className={styles.CardContainer}>\n        <Card.Body>\n          <h2 className={styles.CardText}>Log In</h2>\n          <LoginForm />\n        </Card.Body>\n        <div className={styles.CardText}>\n          Dont have an Account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport const Login = () => {\n  const { currentUser } = useAuth();\n  return currentUser ? <Redirect to={ROUTES.HOME} /> : <LoginPage />;\n};\n","import { Square } from './randomSquare';\n\nexport function convertToAlgebra(input: Square): string {\n  const stringX = `${input.x}`;\n  const letter = String.fromCharCode(stringX.charCodeAt(0) + (97 - 49));\n  return letter + input.y;\n}\n\nexport function whiteColorSquare(input: Square): boolean {\n  const xEven = input.x % 2 === 0;\n  const yEven = input.y % 2 === 0;\n\n  return !((xEven && yEven) || (!xEven && !yEven));\n}\n","export interface Square {\n  x: number;\n  y: number;\n}\n\nexport function randomSquare(): Square {\n  return {\n    x: Math.floor(Math.random() * 8) + 1,\n    y: Math.floor(Math.random() * 8) + 1,\n  };\n}\n","/* eslint-disable react/prop-types */\nimport React, { ReactElement } from 'react';\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n} from 'recharts';\n\nexport const TimeChart: React.FC<{\n  data: { x: string; time: number }[];\n  fill: string;\n  color?: string;\n}> = (props): ReactElement => {\n  const { data, fill, color } = props;\n\n  return (\n    <AreaChart\n      width={600}\n      height={200}\n      data={data}\n      margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"x\" tick={{ fill: color }} />\n      <YAxis tick={{ fill: color }} />\n      <Tooltip />\n      <Area type=\"monotone\" dataKey=\"time\" stroke={fill} fill={fill} />\n    </AreaChart>\n  );\n};\n","import React, { ReactElement } from 'react';\nimport ChessboardJs from 'react-chessboardjs-wrapper';\nimport { Button } from 'react-bootstrap';\nimport {\n  convertToAlgebra,\n  whiteColorSquare,\n  randomSquare,\n} from '../../../Chess';\nimport type { Square } from '../../../Chess';\nimport styles from './SquareColors.module.css';\nimport { NavbarMod } from '../../layout';\nimport { TimeChart } from '../Charts';\n\nconst wK = 'wK';\nconst bK = 'bK';\nconst pieceTheme = './chesspieces/{piece}.png';\n\ninterface SquareProps {\n  amount: number;\n}\n\ninterface SquareState {\n  show: boolean;\n  finish: boolean;\n  count: number;\n  correct: number;\n  currCorrect: boolean;\n}\n\nexport class SquareColors extends React.Component<SquareProps, SquareState> {\n  private amount: number;\n\n  private squares: Square[];\n\n  private times: number[];\n\n  private answers: boolean[];\n\n  private currTimer: number;\n\n  private currIntervalId: any;\n\n  constructor(props: SquareProps) {\n    super(props);\n\n    this.amount = props.amount;\n    this.squares = Array<Square>(this.amount);\n    this.answers = Array<boolean>(this.amount);\n    this.times = Array<number>(this.amount);\n    for (let i = 0; i < this.amount; i += 1) {\n      this.squares[i] = randomSquare();\n      this.times[i] = -1;\n    }\n\n    this.state = {\n      show: false,\n      finish: false,\n      count: 1,\n      correct: 0,\n      currCorrect: false,\n    };\n\n    this.increase = this.increase.bind(this);\n    this.buttonColor = this.buttonColor.bind(this);\n\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.resetState = this.resetState.bind(this);\n\n    this.render = this.render.bind(this);\n\n    this.timerStart = this.timerStart.bind(this);\n    this.timerStop = this.timerStop.bind(this);\n\n    this.currTimer = 0;\n    this.timerStart();\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyPress, false);\n    clearInterval(this.currIntervalId);\n  }\n\n  timerStart = () => {\n    this.currTimer = 0;\n    this.currIntervalId = setInterval(() => {\n      this.currTimer += 100;\n    }, 100);\n  };\n\n  timerStop = () => {\n    const { count } = this.state;\n    clearInterval(this.currIntervalId);\n    this.times[count - 1] = this.currTimer / 1000;\n  };\n\n  increase = () => {\n    const { count, show } = this.state;\n    if (count < this.amount) {\n      this.setState({ show: !show, count: count + 1 });\n      this.timerStart();\n    } else {\n      this.setState({ finish: true });\n    }\n  };\n\n  getConfig = (square: Square) => {\n    const algebraic = convertToAlgebra(square);\n    const position: { [key: string]: string } = {};\n    position[algebraic] = whiteColorSquare(square) ? wK : bK;\n    const config = { position, pieceTheme };\n\n    return config;\n  };\n\n  buttonColor = (colorWhite: boolean) => {\n    const { count, correct } = this.state;\n    const whiteSquare = whiteColorSquare(this.squares[count - 1]);\n    if (whiteSquare === colorWhite || !whiteSquare === !colorWhite) {\n      this.setState({ correct: correct + 1, show: true, currCorrect: true });\n      this.answers[count - 1] = true;\n    } else {\n      this.setState({ show: true, currCorrect: false });\n      this.answers[count - 1] = false;\n    }\n\n    this.timerStop();\n  };\n\n  handleKeyPress = (event: KeyboardEvent) => {\n    const { show } = this.state;\n\n    if (show === false) {\n      if (event.key === 'ArrowLeft') {\n        this.buttonColor(true);\n      } else if (event.key === 'ArrowRight') {\n        this.buttonColor(false);\n      }\n    } else {\n      this.increase();\n    }\n  };\n\n  resetState = () => {\n    for (let i = 0; i < this.amount; i += 1) {\n      this.squares[i] = randomSquare();\n    }\n\n    this.setState({\n      show: false,\n      finish: false,\n      count: 1,\n      correct: 0,\n      currCorrect: false,\n    });\n\n    this.timerStart();\n  };\n\n  render() {\n    const { correct, count, show, currCorrect, finish } = this.state;\n\n    const HeaderStats: React.FC = (): ReactElement => {\n      return (\n        <div className={styles.HeadText}>\n          <span>\n            Question: {count}/{this.amount}{' '}\n            <span style={{ color: '#7FFF00' }}>Correct: </span>\n            {correct}/{show ? count : count - 1}\n          </span>\n        </div>\n      );\n    };\n\n    const CurrSquare: React.FC = (): ReactElement => {\n      return (\n        <div className={styles.CurrentSquare}>\n          {convertToAlgebra(this.squares[count - 1])}\n        </div>\n      );\n    };\n\n    const ChessboardShow: React.FC = (): ReactElement => {\n      const config = this.getConfig(this.squares[count - 1]);\n\n      return (\n        <div className={styles.ChessboardShow}>\n          {currCorrect ? (\n            <div className={styles.show}>\n              {convertToAlgebra(this.squares[count - 1])}:\n              <span style={{ color: '#7FFF00' }}>Correct</span>\n            </div>\n          ) : (\n            <div className={styles.show}>\n              {convertToAlgebra(this.squares[count - 1])}:\n              <span style={{ color: '#DC143C' }}>Wrong</span>\n            </div>\n          )}\n          <div className={styles.chessboard}>\n            <ChessboardJs config={config} />\n          </div>\n\n          <Button\n            className={styles.ShowButton}\n            variant=\"primary\"\n            onClick={() => {\n              this.increase();\n            }}\n          >\n            Next\n          </Button>\n        </div>\n      );\n    };\n\n    const FooterColorChoose: React.FC = (): ReactElement => {\n      return (\n        <div className={styles.FooterColorButtons}>\n          <Button\n            className={styles.colorButton}\n            onClick={() => this.buttonColor(true)}\n          >\n            White\n          </Button>\n          <Button\n            className={styles.colorButton}\n            onClick={() => this.buttonColor(false)}\n          >\n            Black\n          </Button>\n        </div>\n      );\n    };\n\n    const FinishScreen: React.FC = (): ReactElement => {\n      const data = [];\n      for (let i = 0; i < this.amount; i += 1) {\n        data[i] = { x: convertToAlgebra(this.squares[i]), time: this.times[i] };\n      }\n\n      const dataRightAnswers = [];\n      const dataWrongAnswers = [];\n\n      let dataRightIndex = 0;\n      let dataWrongIndex = 0;\n      for (let i = 0; i < this.amount; i += 1) {\n        if (this.answers[i] === true) {\n          dataRightAnswers[dataRightIndex] = {\n            x: convertToAlgebra(this.squares[i]),\n            time: this.times[i],\n          };\n          dataRightIndex += 1;\n        } else {\n          dataWrongAnswers[dataWrongIndex] = {\n            x: convertToAlgebra(this.squares[i]),\n            time: this.times[i],\n          };\n          dataWrongIndex += 1;\n        }\n      }\n\n      return (\n        <div className={styles.FinishScreen}>\n          <div className={styles.FinishText}>\n            <div>\n              You got <span style={{ color: 'white' }}>{correct}</span> correct\n              Answers from a total of{' '}\n              <span style={{ color: 'white' }}>{this.amount}</span> Questions.\n            </div>\n            <div>\n              You got{' '}\n              <span style={{ color: '#7FFF00' }}>\n                {' '}\n                {Math.round((correct / this.amount) * 100)}%\n              </span>{' '}\n              correct.\n            </div>\n          </div>\n          <div className={styles.ButtonContainer}>\n            <Button\n              variant=\"primary\"\n              onClick={this.resetState}\n              className={styles.FinishRestart}\n            >\n              Restart?\n            </Button>\n          </div>\n\n          <div className={styles.GraphAll}>\n            <div className={styles.GraphText} style={{ color: 'white' }}>\n              All Stats:{' '}\n            </div>\n            <TimeChart data={data} color=\"#8884d8\" fill=\"#8884d8\" />\n            <div className={styles.GraphText} style={{ color: '#7FFF00' }}>\n              Right Answers:\n            </div>\n            <TimeChart data={dataRightAnswers} color=\"#7FFF00\" fill=\"#7FFF00\" />\n            <div className={styles.GraphText} style={{ color: '#DC143C' }}>\n              Wrong answers:\n            </div>\n            <TimeChart data={dataWrongAnswers} color=\"#DC143C\" fill=\"#DC143C\" />\n          </div>\n        </div>\n      );\n    };\n\n    if (finish) {\n      return (\n        <div className={styles.Container}>\n          <NavbarMod />\n          <FinishScreen />\n        </div>\n      );\n    }\n\n    return (\n      <div className={styles.Container}>\n        <NavbarMod />\n        <HeaderStats />\n        {show ? null : <CurrSquare />}\n        {show ? <ChessboardShow /> : <FooterColorChoose />}\n      </div>\n    );\n  }\n}\n","import React, { ReactElement, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { SquareColors } from './SquareColors';\n\nexport const SquareColorStart: React.FC = (): ReactElement => {\n  const [start, setStart] = useState(false);\n\n  return (\n    <div>\n      {start ? (\n        <SquareColors amount={3} />\n      ) : (\n        <Button variant=\"primary\" onClick={() => setStart(true)}>\n          Start ?\n        </Button>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { Register } from '../components/Register';\nimport { Login } from '../components/Login';\nimport { SquareColorStart } from '../components/Training';\nimport { UserProvider } from '../components/Firebase';\nimport styles from './App.module.css';\n\nimport * as ROUTES from '../constants/routes';\n\nexport default function App() {\n  return (\n    <UserProvider>\n      <HashRouter>\n        <div className={styles.Container}>\n          <Switch>\n            <Route exact path={ROUTES.LOG_IN} component={Login} />\n            <Route exact path={ROUTES.SIGN_UP} component={Register} />\n            <Route\n              exact\n              path={ROUTES.SQUARECOLORS}\n              component={SquareColorStart}\n            />\n            <Route>\n              <h1 className={styles.error}>PAGE NOT FOUND</h1>\n            </Route>\n          </Switch>\n        </div>\n      </HashRouter>\n    </UserProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}