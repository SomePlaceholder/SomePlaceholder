{"version":3,"sources":["components/Register/Register.module.css","components/Login/Login.module.css","components/layout/Navbar.module.css","App/App.module.css","components/Training/SquareColors/SquareColors.module.css","constants/routes.tsx","components/Firebase/Firebase.tsx","components/Firebase/Context.tsx","components/Training/SquareColors/randomSquare.tsx","components/Training/SquareColors/Header.tsx","Chess/HelperFunctions.tsx","components/Training/Charts.tsx","components/Training/SquareColors/FinishScreen.tsx","components/Firebase/SquareColorApi.tsx","components/Training/SquareColors/AnswerScreen.tsx","components/Training/SquareColors/SquareColorDialog.tsx","components/Training/SquareColors/SquareColors.tsx","components/layout/Navbar.tsx","components/Firebase/AuthApi.tsx","components/Training/SquareColors/Stats.tsx","components/Training/SquareColors/Startpage.tsx","components/Register/Register.tsx","components/Login/Login.tsx","App/index.tsx","index.tsx"],"names":["module","exports","SIGN_UP","LOG_IN","HOME","SQUARECOLORS","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","db","database","AuthContext","React","createContext","currentUser","useAuth","useContext","UserProvider","props","children","useState","setCurrentUser","useEffect","onAuthStateChanged","user","Provider","value","defaultFromDataSettings","amount","numGames","targetTime","mistakesWeight","timeWeight","randomSquare","callback","settings","getFromData","userId","then","resolved","randomSquares","random","i","randomSq","randomArray","x","Math","floor","y","a","dataRef","SquareColorDataOrdered","limitToLast","once","dataSnapshot","data","transformSquareColorData","map","dataAll","answers","squaresOverTime","squaresWrong","forEach","walkthrough","entry","answer","time","push","square","getFromDataSingle","card","min","length","randomOtherNum","Header","count","correct","show","className","styles","HeadText","style","color","convertToAlgebra","input","stringX","String","fromCharCode","charCodeAt","whiteColorSquare","xEven","yEven","TimeChart","fill","AreaChart","width","height","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","tick","YAxis","Tooltip","Area","type","stroke","FinishScreen","restartCallback","dataRightAnswers","dataWrongAnswers","dataRightIndex","dataWrongIndex","avgTimeCorrect","avgTimeWrong","key","ref","timestamp","ServerValue","TIMESTAMP","putSquareColorMetaData","SquareColorMetaRef","uid","set","putSquareColorData","SquareColorDataRefFromKey","FinishText","round","ButtonContainer","Button","variant","onClick","FinishRestart","GraphAll","GraphText","AnswerScreen","handleKeyPress","event","nextCallback","bind","document","addEventListener","this","removeEventListener","config","position","pieceTheme","getConfig","ChessboardShow","chessboard","ShowButton","Component","SquareColorDialog","currTimer","currIntervalId","buttonColor","timerStart","setInterval","timerStop","clearInterval","colorWhite","answerCallback","whiteSquare","AnswerButtons","FooterColorButtons","colorButton","CurrentSquare","SquareColors","setCount","setShow","finish","setFinish","setCorrect","loading","setLoading","setAnswers","squares","setSquares","callbackSquareData","defaultProps","undefined","NavbarMod","UserTile","history","useHistory","LoggedIn","DropdownButton","marginRight","title","displayName","Dropdown","Item","as","Link","to","ROUTES","signOut","LoggedOut","Nav","Navbar","Text","NavbarText","bar","Toggle","aria-controls","Brand","NavDropdown","id","onMouseEnter","onMouseLeave","StatsElement","stats","setStats","orderByChild","listener","on","snapshot","keys","child","val","transformSquareColorMetaData","off","dataItems","element","dateInt","Date","Statsentry","getDate","getMonth","getFullYear","StatsList","reverse","Stats","SquareColorStart","start","setStart","setSettings","settingsRef","SquareColorFromDataSettingsRef","settingsSnapshot","settingsSnapshotFunction","settingsData","StartPage","showSettings","setShowSettings","schema","yup","shape","required","max","validationSchema","validateOnChange","onSubmit","values","actions","update","resetForm","setSubmitting","initialValues","handleSubmit","handleChange","errors","isSubmitting","Form","noValidate","Group","controlId","Label","Control","name","placeholder","isInvalid","onChange","Feedback","disabled","SquareColorDataRef","transformSquareColorDataFromNode","Username","terms","isTrue","RegisterForm","username","createUserWithEmailAndPassword","result","updateProfile","catch","error","setFieldError","code","Check","checked","label","feedback","RegisterPage","Container","Card","bg","text","CardContainer","Body","CardText","Register","LoginForm","signInWithEmailAndPassword","LoginPage","Login","App","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5f8d2fc8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Register_Container__2nf1n\",\"CardContainer\":\"Register_CardContainer__3srrD\",\"CardText\":\"Register_CardText__31jmS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Login_Container__3nRSH\",\"CardContainer\":\"Login_CardContainer__1UQp9\",\"CardText\":\"Login_CardText__2sGXU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"Navbar_bar__24ZfR\",\"NavbarText\":\"Navbar_NavbarText__3UT7K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"App_Container__Qvkoa\",\"error\":\"App_error__3KXN9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"SquareColors_Container__3STX4\",\"HeadText\":\"SquareColors_HeadText__1Lhx0\",\"CurrentSquare\":\"SquareColors_CurrentSquare__1BDw4\",\"show\":\"SquareColors_show__1l7fX\",\"ChessboardShow\":\"SquareColors_ChessboardShow__1qKIr\",\"chessboard\":\"SquareColors_chessboard__2bqT9\",\"ShowButton\":\"SquareColors_ShowButton__3mKkv\",\"FooterColorButtons\":\"SquareColors_FooterColorButtons__1r3vP\",\"colorButton\":\"SquareColors_colorButton__23crt\",\"FinishScreen\":\"SquareColors_FinishScreen__1GdSd\",\"FinishText\":\"SquareColors_FinishText__2_Rrr\",\"FinishRestart\":\"SquareColors_FinishRestart__2Y7l2\",\"ButtonContainer\":\"SquareColors_ButtonContainer__1b21Z\",\"GraphAll\":\"SquareColors_GraphAll__OVYRz\",\"GraphText\":\"SquareColors_GraphText__28Ew3\",\"StatsList\":\"SquareColors_StatsList__3iKPV\",\"Statsentry\":\"SquareColors_Statsentry__1FDc2\",\"StartPage\":\"SquareColors_StartPage__3U7c-\"};","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const LOG_IN = '/login';\nexport const HOME = '/home';\n\nexport const SQUARECOLORS = '/squarecolors';\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const db = firebase.database();\n","import React, { ReactElement, useContext, useState, useEffect } from 'react';\nimport type firebase from 'firebase';\nimport { auth } from './Firebase';\n\ninterface UserProviderState {\n  currentUser: firebase.User | null;\n}\n\nconst AuthContext = React.createContext<UserProviderState>({\n  currentUser: null,\n});\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\ninterface UserProviderProps {\n  children: ReactElement;\n}\n\nexport function UserProvider(props: UserProviderProps) {\n  const { children } = props;\n  const [currentUser, setCurrentUser] = useState<firebase.User | null>(null);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n    });\n    return unsubscribe;\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ currentUser }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n","import type { Square } from '../../../Chess';\n\nimport {\n  SquareColorDataOrdered,\n  transformSquareColorData,\n} from '../../Firebase';\n\nexport interface randomSquareSettings {\n  userId: string;\n  settings: fromDataSettings;\n}\n\nexport interface fromDataSettings {\n  amount?: number;\n  targetTime?: number;\n  numGames?: number;\n  mistakesWeight?: number;\n  timeWeight?: number;\n}\n\nexport const defaultFromDataSettings = {\n  amount: 50,\n  numGames: 10,\n  targetTime: 3,\n  mistakesWeight: 1,\n  timeWeight: 0.5,\n};\n\nexport function randomSquare(\n  amount: number,\n  // eslint-disable-next-line no-unused-vars\n  callback: (arg0: Square[]) => void,\n  settings?: randomSquareSettings,\n) {\n  if (settings) {\n    getFromData(settings.userId, amount, settings.settings).then((resolved) => {\n      callback(resolved);\n    });\n  } else {\n    callback(randomArray(amount));\n  }\n}\n\nfunction randomArray(amount: number) {\n  const randomSquares: Square[] = [];\n  randomSquares[0] = random();\n  for (let i = 1; i < amount; i += 1) {\n    let randomSq = random();\n    while (randomSq === randomSquares[i - 1]) {\n      randomSq = random();\n    }\n    randomSquares[i] = randomSq;\n  }\n\n  return randomSquares;\n}\n\nfunction random(): Square {\n  return {\n    x: Math.floor(Math.random() * 8) + 1,\n    y: Math.floor(Math.random() * 8) + 1,\n  };\n}\n\n/* \n    Normal Squares: 48 Indexes  - Weighted Squares: min(48, mistakes+timeMistakes) Indexes\n*/\n\nasync function getFromData(\n  userId: string,\n  amount: number,\n  settings: fromDataSettings,\n) {\n  const numGames = settings.numGames\n    ? settings.numGames\n    : defaultFromDataSettings.numGames;\n  const targetTime = settings.targetTime\n    ? settings.targetTime\n    : defaultFromDataSettings.targetTime;\n\n  const dataRef = SquareColorDataOrdered(userId).limitToLast(numGames);\n  const dataSnapshot = await dataRef.once('value');\n  const data = transformSquareColorData(dataSnapshot)[0].map(\n    (dataAll) => dataAll.answers,\n  );\n\n  const squaresOverTime: Square[] = [];\n  const squaresWrong: Square[] = [];\n\n  data.forEach((walkthrough) =>\n    walkthrough.forEach((entry) => {\n      if (!entry.answer) {\n        squaresWrong.push(entry.square);\n      } else if (entry.time > targetTime) {\n        squaresOverTime.push(entry.square);\n      }\n    }),\n  );\n\n  const randomSquares: Square[] = [];\n  randomSquares[0] = getFromDataSingle(squaresOverTime, squaresWrong);\n  for (let i = 1; i < amount; i += 1) {\n    let randomSq = getFromDataSingle(squaresOverTime, squaresWrong);\n    while (randomSq === randomSquares[i - 1]) {\n      randomSq = getFromDataSingle(squaresOverTime, squaresWrong);\n    }\n    randomSquares[i] = randomSq;\n  }\n  return randomSquares;\n}\n\nfunction getFromDataSingle(squaresOverTime: Square[], squaresWrong: Square[]) {\n  const card = Math.min(48, squaresOverTime.length + squaresWrong.length);\n  const randomNum = Math.floor(Math.random() * card);\n  if (randomNum < 48) {\n    return random();\n  }\n\n  const randomOtherNum = Math.floor(\n    Math.random() * squaresOverTime.length + squaresWrong.length,\n  );\n  if (randomOtherNum < squaresOverTime.length) {\n    return squaresOverTime[randomOtherNum];\n  }\n  return squaresWrong[randomOtherNum - squaresOverTime.length];\n}\n","import React, { ReactElement } from 'react';\n\nimport styles from './SquareColors.module.css';\n\ninterface HeaderProps {\n  amount: number;\n  count: number;\n  correct: number;\n  show: boolean;\n}\n\nexport const Header: React.FC<HeaderProps> = (props): ReactElement => {\n  const { amount, count, correct, show } = props;\n  return (\n    <div className={styles.HeadText}>\n      <span>\n        Question: {count}/{amount}{' '}\n        <span style={{ color: '#7FFF00' }}>Correct: </span>\n        {correct}/{show ? count : count - 1}\n      </span>\n    </div>\n  );\n};\n","import type { Square } from './constants';\n\nexport function convertToAlgebra(input: Square): string {\n  const stringX = `${input.x}`;\n  const letter = String.fromCharCode(stringX.charCodeAt(0) + (97 - 49));\n  return letter + input.y;\n}\n\nexport function whiteColorSquare(input: Square): boolean {\n  const xEven = input.x % 2 === 0;\n  const yEven = input.y % 2 === 0;\n\n  return !((xEven && yEven) || (!xEven && !yEven));\n}\n","/* eslint-disable react/prop-types */\nimport React, { ReactElement } from 'react';\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n} from 'recharts';\n\nexport const TimeChart: React.FC<{\n  data: { x: string; time: number }[];\n  fill: string;\n  color?: string;\n}> = (props): ReactElement => {\n  const { data, fill, color } = props;\n\n  return (\n    <AreaChart\n      width={600}\n      height={200}\n      data={data}\n      margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"x\" tick={{ fill: color }} />\n      <YAxis tick={{ fill: color }} />\n      <Tooltip />\n      <Area type=\"monotone\" dataKey=\"time\" stroke={fill} fill={fill} />\n    </AreaChart>\n  );\n};\n","import React, { useEffect, ReactElement } from 'react';\nimport { Button } from 'react-bootstrap';\nimport {\n  useAuth,\n  SquareColorMetaRef,\n  SquareColorDataRefFromKey,\n  putSquareColorMetaData,\n  putSquareColorData,\n} from '../../Firebase';\nimport { convertToAlgebra } from '../../../Chess';\nimport { TimeChart } from '../Charts';\n\nimport { answerData } from './SquareColors';\n\nimport styles from './SquareColors.module.css';\n\nexport interface FinishScreenProps {\n  amount: number;\n  answers: answerData[];\n  restartCallback: () => void;\n}\n\nexport const FinishScreen: React.FC<FinishScreenProps> = (\n  props,\n): ReactElement => {\n  const { amount, answers, restartCallback } = props;\n  const { currentUser } = useAuth();\n  const data = [];\n\n  for (let i = 0; i < amount; i += 1) {\n    data[i] = { x: convertToAlgebra(answers[i].square), time: answers[i].time };\n  }\n\n  const dataRightAnswers = [];\n  const dataWrongAnswers = [];\n\n  let dataRightIndex = 0;\n  let dataWrongIndex = 0;\n\n  let avgTimeCorrect = 0;\n  let avgTimeWrong = 0;\n  for (let i = 0; i < amount; i += 1) {\n    if (answers[i].answer === true) {\n      dataRightAnswers[dataRightIndex] = {\n        x: convertToAlgebra(answers[i].square),\n        time: answers[i].time,\n      };\n      dataRightIndex += 1;\n      avgTimeCorrect += answers[i].time;\n    } else {\n      dataWrongAnswers[dataWrongIndex] = {\n        x: convertToAlgebra(answers[i].square),\n        time: answers[i].time,\n      };\n      dataWrongIndex += 1;\n      avgTimeWrong += answers[i].time;\n    }\n  }\n  avgTimeCorrect = dataRightIndex === 0 ? -1 : avgTimeCorrect / dataRightIndex;\n  avgTimeWrong = dataWrongIndex === 0 ? -1 : avgTimeWrong / dataWrongIndex;\n\n  useEffect(() => {\n    if (currentUser) {\n      const metaRef = SquareColorMetaRef(currentUser.uid);\n      const key = putSquareColorMetaData(metaRef, {\n        amount,\n        correct: dataRightIndex,\n        avgTimeCorrect,\n        avgTimeWrong,\n        timestamp: -1,\n      });\n      const dataRef = SquareColorDataRefFromKey(currentUser.uid, key);\n      putSquareColorData(dataRef, { timestamp: -1, answers });\n    }\n  }, [\n    amount,\n    currentUser,\n    dataRightIndex,\n    dataWrongIndex,\n    avgTimeCorrect,\n    avgTimeWrong,\n    answers,\n  ]);\n\n  return (\n    <div className={styles.FinishScreen}>\n      <div className={styles.FinishText}>\n        <div>\n          You got <span style={{ color: 'white' }}>{dataRightIndex}</span>{' '}\n          correct Answers from a total of{' '}\n          <span style={{ color: 'white' }}>{amount}</span> Questions.\n        </div>\n        <div>\n          You got{' '}\n          <span style={{ color: '#7FFF00' }}>\n            {' '}\n            {Math.round((dataRightIndex / amount) * 100)}%\n          </span>{' '}\n          correct.\n        </div>\n      </div>\n      <div className={styles.ButtonContainer}>\n        <Button\n          variant=\"primary\"\n          onClick={restartCallback}\n          className={styles.FinishRestart}\n        >\n          Restart?\n        </Button>\n      </div>\n\n      <div className={styles.GraphAll}>\n        <div className={styles.GraphText} style={{ color: 'white' }}>\n          All Stats:{' '}\n        </div>\n        <TimeChart data={data} color=\"#8884d8\" fill=\"#8884d8\" />\n        <div className={styles.GraphText} style={{ color: '#7FFF00' }}>\n          Right Answers:\n        </div>\n        <TimeChart data={dataRightAnswers} color=\"#7FFF00\" fill=\"#7FFF00\" />\n        <div className={styles.GraphText} style={{ color: '#DC143C' }}>\n          Wrong answers:\n        </div>\n        <TimeChart data={dataWrongAnswers} color=\"#DC143C\" fill=\"#DC143C\" />\n      </div>\n    </div>\n  );\n};\n","import firebase from 'firebase';\nimport { db } from './Firebase';\n\nimport type { answerData, fromDataSettings } from '../Training';\n\nimport { defaultFromDataSettings } from '../Training';\n\nexport interface SquareColorMetaData {\n  amount: number;\n  correct: number;\n  timestamp: number;\n  avgTimeCorrect: number;\n  avgTimeWrong: number;\n}\n\nexport function SquareColorMetaRef(\n  userId: string,\n): firebase.database.Reference {\n  return db.ref(`users/${userId}/SquareColors/log`);\n}\n\nexport function SquareColorMetaOrdered(\n  userId: string,\n): firebase.database.Query {\n  return SquareColorMetaRef(userId).orderByChild('timestamp');\n}\n\nexport function putSquareColorMetaData(\n  ref: firebase.database.Reference,\n  props: SquareColorMetaData,\n): string | null {\n  return ref.push({\n    ...props,\n    timestamp: firebase.database.ServerValue.TIMESTAMP,\n  }).key;\n}\n\nexport function transformSquareColorMetaData(\n  snapshot: firebase.database.DataSnapshot,\n): [SquareColorMetaData[], (string | null)[]] {\n  const data: SquareColorMetaData[] = [];\n  const keys: (string | null)[] = [];\n  snapshot.forEach((children) => {\n    data.push({\n      amount: children.child('amount').val(),\n      correct: children.child('correct').val(),\n      timestamp: children.child('timestamp').val(),\n      avgTimeCorrect: children.child('avgTimeCorrect').val(),\n      avgTimeWrong: children.child('avgTimeWrong').val(),\n    });\n    keys.push(children.key);\n  });\n\n  return [data, keys];\n}\n\nexport interface SquareColorData {\n  timestamp: number;\n  answers: answerData[];\n}\n\nexport function SquareColorDataRef(userId: string) {\n  return db.ref(`users/${userId}/SquareColors/logData`);\n}\n\nexport function SquareColorDataOrdered(\n  userId: string,\n): firebase.database.Query {\n  return SquareColorDataRef(userId).orderByChild('timestamp');\n}\n\nexport function SquareColorDataRefFromKey(userId: string, key: string | null) {\n  return db.ref(`users/${userId}/SquareColors/logData/${key}`);\n}\n\nexport function putSquareColorData(\n  dataRef: firebase.database.Reference,\n  data: SquareColorData,\n) {\n  dataRef.set({\n    ...data,\n    timestamp: firebase.database.ServerValue.TIMESTAMP,\n  });\n}\n\nexport function transformSquareColorData(\n  snapshot: firebase.database.DataSnapshot,\n): [SquareColorData[], (string | null)[]] {\n  const data: SquareColorData[] = [];\n  const keys: (string | null)[] = [];\n  snapshot.forEach((children) => {\n    data.push(transformSquareColorDataFromNode(children)[0]);\n    keys.push(children.key);\n  });\n\n  return [data, keys];\n}\n\nexport function transformSquareColorDataFromNode(\n  snapshot: firebase.database.DataSnapshot,\n): [SquareColorData, string | null] {\n  const data = {\n    timestamp: snapshot.child('timestamp').val(),\n    answers: snapshot.child('answers').val(),\n  };\n  const { key } = snapshot;\n\n  return [data, key];\n}\n\nexport function SquareColorFromDataSettingsRef(userId: string) {\n  return db.ref(`users/${userId}/SquareColors/settings/fromData`);\n}\n\nexport function transformSquareColorFromDataSettings(\n  snapshot: firebase.database.DataSnapshot,\n): fromDataSettings {\n  return { ...defaultFromDataSettings, ...snapshot.val() };\n}\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport ChessboardJs from 'react-chessboardjs-wrapper';\nimport styles from './SquareColors.module.css';\nimport type { Square } from '../../../Chess';\nimport { convertToAlgebra, whiteColorSquare } from '../../../Chess';\n\nconst wK = 'wK';\nconst bK = 'bK';\nconst pieceTheme = './chesspieces/{piece}.png';\n\nconst getConfig = (square: Square) => {\n  const algebraic = convertToAlgebra(square);\n  const position: { [key: string]: string } = {};\n  position[algebraic] = whiteColorSquare(square) ? wK : bK;\n  const config = { position, pieceTheme };\n\n  return config;\n};\n\ninterface AnswerScreenProps {\n  answer: boolean;\n  square: Square;\n  nextCallback: () => void;\n}\n\nexport class AnswerScreen extends React.Component<AnswerScreenProps> {\n  constructor(props: AnswerScreenProps) {\n    super(props);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyPress, false);\n  }\n\n  handleKeyPress = (event: KeyboardEvent) => {\n    const { nextCallback } = this.props;\n    if (event.key === ' ') {\n      nextCallback();\n    }\n  };\n\n  render() {\n    const { answer, square, nextCallback } = this.props;\n    const config = getConfig(square);\n    return (\n      <div className={styles.ChessboardShow}>\n        {answer ? (\n          <div className={styles.show}>\n            {convertToAlgebra(square)}:\n            <span style={{ color: '#7FFF00' }}>Correct</span>\n          </div>\n        ) : (\n          <div className={styles.show}>\n            {convertToAlgebra(square)}:\n            <span style={{ color: '#DC143C' }}>Wrong</span>\n          </div>\n        )}\n        <div className={styles.chessboard}>\n          <ChessboardJs config={config} />\n        </div>\n\n        <Button\n          className={styles.ShowButton}\n          variant=\"primary\"\n          onClick={nextCallback}\n        >\n          Next\n        </Button>\n      </div>\n    );\n  }\n}\n","import React, { ReactElement } from 'react';\nimport { Button } from 'react-bootstrap';\nimport type { Square } from '../../../Chess';\nimport { convertToAlgebra, whiteColorSquare } from '../../../Chess';\n\nimport styles from './SquareColors.module.css';\n\ninterface DialogProps {\n  amount: number;\n  square: Square;\n  // eslint-disable-next-line no-unused-vars\n  answerCallback: (arg0: boolean, arg1: number) => void;\n}\n\nexport class SquareColorDialog extends React.Component<DialogProps> {\n  private time: number;\n\n  private currTimer: number;\n\n  private currIntervalId: any;\n\n  constructor(props: DialogProps) {\n    super(props);\n\n    this.buttonColor = this.buttonColor.bind(this);\n\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n\n    this.timerStart = this.timerStart.bind(this);\n    this.timerStop = this.timerStop.bind(this);\n\n    this.currTimer = 0;\n    this.time = 0;\n    this.timerStart();\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyPress, false);\n    clearInterval(this.currIntervalId);\n  }\n\n  handleKeyPress = (event: KeyboardEvent) => {\n    if (event.key === 'ArrowLeft') {\n      this.buttonColor(true);\n    } else if (event.key === 'ArrowRight') {\n      this.buttonColor(false);\n    }\n  };\n\n  timerStart = () => {\n    this.currIntervalId = setInterval(() => {\n      this.currTimer += 100;\n    }, 100);\n  };\n\n  timerStop = () => {\n    clearInterval(this.currIntervalId);\n    this.time = this.currTimer / 1000;\n  };\n\n  buttonColor = (colorWhite: boolean) => {\n    const { square, answerCallback } = this.props;\n    this.timerStop();\n    const whiteSquare = whiteColorSquare(square);\n    if (whiteSquare === colorWhite || !whiteSquare === !colorWhite) {\n      answerCallback(true, this.time);\n    } else {\n      answerCallback(false, this.time);\n    }\n  };\n\n  render() {\n    const { square } = this.props;\n    const AnswerButtons: React.FC = (): ReactElement => {\n      return (\n        <div className={styles.FooterColorButtons}>\n          <Button\n            className={styles.colorButton}\n            onClick={() => this.buttonColor(true)}\n          >\n            White\n          </Button>\n          <Button\n            className={styles.colorButton}\n            onClick={() => this.buttonColor(false)}\n          >\n            Black\n          </Button>\n        </div>\n      );\n    };\n\n    return (\n      <div>\n        <div className={styles.CurrentSquare}>{convertToAlgebra(square)}</div>\n        <AnswerButtons />\n      </div>\n    );\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { randomSquare, randomSquareSettings } from './randomSquare';\nimport type { Square } from '../../../Chess';\nimport { Header } from './Header';\nimport { FinishScreen } from './FinishScreen';\nimport { AnswerScreen } from './AnswerScreen';\nimport { SquareColorDialog } from './SquareColorDialog';\n\ninterface SquareProps {\n  amount: number;\n  settings?: randomSquareSettings;\n}\n\nexport interface answerData {\n  square: Square;\n  answer: boolean;\n  time: number;\n}\n\nexport const SquareColors: React.FC<SquareProps> = (props: SquareProps) => {\n  const { amount, settings } = props;\n  const [count, setCount] = useState(1);\n  const [show, setShow] = useState(false);\n  const [finish, setFinish] = useState(false);\n  const [correct, setCorrect] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  const [answers, setAnswers] = useState<answerData[]>([]);\n\n  const [squares, setSquares] = useState<Square[]>([]);\n  useEffect(() => {\n    randomSquare(amount, callbackSquareData, settings);\n  }, [amount, settings]);\n\n  const restart = () => {\n    setLoading(true);\n    randomSquare(amount, callbackSquareData, settings);\n    setAnswers([]);\n    setCount(1);\n    setCorrect(0);\n    setShow(false);\n    setFinish(false);\n  };\n\n  function callbackSquareData(square: Square[]) {\n    setSquares(square);\n    setLoading(false);\n  }\n\n  const increase = () => {\n    setShow(false);\n    if (count < amount) {\n      setCount(count + 1);\n    } else {\n      setFinish(true);\n    }\n  };\n\n  if (loading) {\n    return <div>LOADING</div>;\n  }\n\n  if (!finish) {\n    return (\n      <div>\n        <Header amount={amount} count={count} show={show} correct={correct} />\n        {!show ? (\n          <SquareColorDialog\n            amount={amount}\n            square={squares[count - 1]}\n            answerCallback={(answer, time) => {\n              setAnswers([\n                ...answers,\n                { square: squares[count - 1], answer, time },\n              ]);\n              if (answer) {\n                setCorrect(correct + 1);\n              }\n              setShow(true);\n            }}\n          />\n        ) : (\n          <AnswerScreen\n            square={squares[count - 1]}\n            answer={answers[count - 1].answer}\n            nextCallback={() => {\n              increase();\n              setShow(false);\n            }}\n          />\n        )}\n      </div>\n    );\n  }\n  return (\n    <FinishScreen amount={amount} answers={answers} restartCallback={restart} />\n  );\n};\n\nSquareColors.defaultProps = {\n  settings: undefined,\n};\n","import React, { useState } from 'react';\nimport {\n  Navbar,\n  Nav,\n  DropdownButton,\n  Dropdown,\n  NavDropdown,\n} from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport styles from './Navbar.module.css';\nimport * as ROUTES from '../../constants/routes';\nimport { useAuth, signOut } from '../Firebase';\n\nexport function NavbarMod() {\n  const { currentUser } = useAuth();\n  const [show, setShow] = useState(false);\n  const showDropdown = () => {\n    setShow(!show);\n  };\n  const hideDropdown = () => {\n    setShow(false);\n  };\n\n  const UserTile: React.FC = () => {\n    const history = useHistory();\n    const LoggedIn = () => (\n      <DropdownButton\n        style={{ marginRight: '60px' }}\n        variant=\"secondary\"\n        title={currentUser?.displayName}\n      >\n        <Dropdown.Item as={Link} to={ROUTES.HOME}>\n          Home\n        </Dropdown.Item>\n        <Dropdown.Item\n          onClick={async () => {\n            await signOut().then(() => {\n              history.push(ROUTES.HOME);\n            });\n          }}\n        >\n          Log Out\n        </Dropdown.Item>\n      </DropdownButton>\n    );\n\n    const LoggedOut = () => (\n      <Nav>\n        <Navbar.Text as={Link} to={ROUTES.LOG_IN} className={styles.NavbarText}>\n          Log In\n        </Navbar.Text>\n      </Nav>\n    );\n\n    return currentUser ? <LoggedIn /> : <LoggedOut />;\n  };\n\n  return (\n    <Navbar className={styles.bar}>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Brand as={Link} to=\"/\">\n        Something\n      </Navbar.Brand>\n      <NavDropdown\n        title=\"Dropdown\"\n        id=\"collasible-nav-dropdown\"\n        show={show}\n        onMouseEnter={showDropdown}\n        onMouseLeave={hideDropdown}\n      >\n        <NavDropdown.Item\n          as={Link}\n          to={ROUTES.SQUARECOLORS}\n          className={styles.NavbarText}\n        >\n          Square Colors\n        </NavDropdown.Item>\n      </NavDropdown>\n      <Nav className=\"mr-auto\" />\n      <UserTile />\n    </Navbar>\n  );\n}\n","import firebase from 'firebase';\nimport { auth } from './Firebase';\n// *** Auth API ***\nexport function createUser(\n  username: string,\n): Promise<firebase.auth.UserCredential> {\n  return auth.createUserWithEmailAndPassword(\n    `${username}@${username}.com`,\n    `${username}@${username}.com`,\n  );\n}\n\nexport function signInWithUsername(\n  username: string,\n): Promise<firebase.auth.UserCredential> {\n  return auth.signInWithEmailAndPassword(\n    `${username}@${username}.com`,\n    `${username}@${username}.com`,\n  );\n}\n\nexport function signOut(): Promise<void> {\n  return auth.signOut();\n}\n","import React, { ReactElement, useState, useEffect } from 'react';\nimport type firebase from 'firebase';\nimport {\n  useAuth,\n  SquareColorMetaOrdered,\n  SquareColorMetaData,\n  transformSquareColorMetaData,\n} from '../../Firebase';\n\nimport styles from './SquareColors.module.css';\n\nconst StatsElement: React.FC<{ user: firebase.User }> = (\n  props,\n): ReactElement => {\n  const { user } = props;\n  const [stats, setStats] = useState<SquareColorMetaData[]>([]);\n  useEffect(() => {\n    const dataRef = SquareColorMetaOrdered(user.uid).limitToLast(5);\n    const listener = dataRef.on('value', (snapshot) => {\n      setStats(transformSquareColorMetaData(snapshot)[0]);\n    });\n    return () => dataRef.off('value', listener);\n  }, [user]);\n\n  const dataItems = stats.map((element) => {\n    const dateInt = new Date(+element.timestamp);\n    return (\n      <li className={styles.Statsentry} key={element.timestamp}>\n        <span style={{ color: 'white' }}>\n          {`${dateInt.getDate()}/${dateInt.getMonth()}/${dateInt.getFullYear()}`}\n          :\n        </span>\n        <span style={{ color: '#7FFF00' }}>\n          {Math.round((element.correct / element.amount) * 100)}%\n        </span>\n        <span style={{ color: 'wheat' }}> Correct</span>\n      </li>\n    );\n  });\n\n  return (\n    <div>\n      <span className={styles.StatsList}>Latest Entries:</span>\n      <ul>{dataItems.reverse()}</ul>\n    </div>\n  );\n};\n\nexport const Stats: React.FC = () => {\n  const { currentUser } = useAuth();\n  if (currentUser) {\n    return <StatsElement user={currentUser} />;\n  }\n  return null;\n};\n","import React, { ReactElement, useState, useEffect } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { SquareColors } from './SquareColors';\nimport { NavbarMod } from '../../layout';\nimport { Stats } from './Stats';\n\nimport {\n  useAuth,\n  SquareColorFromDataSettingsRef,\n  transformSquareColorFromDataSettings,\n} from '../../Firebase';\n\nimport { randomSquareSettings } from './randomSquare';\n\nimport styles from './SquareColors.module.css';\n\nexport const SquareColorStart: React.FC = (): ReactElement => {\n  const [start, setStart] = useState(false);\n  const [settings, setSettings] = useState<randomSquareSettings | undefined>(\n    undefined,\n  );\n\n  const { currentUser } = useAuth();\n  useEffect(() => {\n    if (currentUser) {\n      const settingsRef = SquareColorFromDataSettingsRef(currentUser.uid);\n      const settingsSnapshotFunction = async () => {\n        const settingsSnapshot = await settingsRef.once('value');\n        setSettings({\n          userId: currentUser.uid,\n          settings: transformSquareColorFromDataSettings(settingsSnapshot),\n        });\n      };\n\n      settingsSnapshotFunction();\n    }\n  }, [currentUser]);\n\n  const settingsCallback = (settingsData?: randomSquareSettings) => {\n    setSettings(settingsData);\n    setStart(true);\n  };\n\n  return (\n    <div>\n      <NavbarMod />\n      {start ? (\n        <SquareColors settings={settings} amount={3} />\n      ) : (\n        <StartPage settings={settings} callback={settingsCallback} />\n      )}\n    </div>\n  );\n};\n\ninterface StartPageProps {\n  // eslint-disable-next-line no-unused-vars\n  callback: (settings?: randomSquareSettings) => void;\n  settings?: randomSquareSettings;\n}\n\nconst StartPage: React.FC<StartPageProps> = (props): ReactElement => {\n  const { callback, settings } = props;\n  const [showSettings, setShowSettings] = useState(false);\n\n  const callbackClick = () => callback(settings);\n\n  const schema = yup.object().shape({\n    amount: yup\n      .number()\n      .required()\n      .min(1, 'Minimum 1 Square')\n      .max(100, 'Max of 100 Squares')\n      .required('Have to specify an amount of squares'),\n    numGames: yup\n      .number()\n      .required()\n      .min(1, 'Minimum has to be 1')\n      .max(90, 'Maximum of 90 allowed')\n      .required('Number of Games has to be specified'),\n\n    targetTime: yup\n      .number()\n      .required()\n      .min(0, 'Minimum of 0 Seconds')\n      .required('Time has to be specified'),\n\n    mistakesWeight: yup\n      .number()\n      .required()\n      .min(0, 'Minimum of 0 Weight')\n      .max(999, 'Use a smaller Number')\n      .required('Weight has to be specified'),\n\n    timeWeight: yup\n      .number()\n      .required()\n      .min(0, 'Minimum of 0 Weight')\n      .max(999, 'Use a smaller Number')\n      .required('Weight has to be specified'),\n  });\n\n  return (\n    <div className={styles.StartPage}>\n      <Stats />\n      {settings ? (\n        <>\n          <Button\n            variant=\"primary\"\n            onClick={() => {\n              setShowSettings(!showSettings);\n            }}\n          >\n            Settings\n          </Button>\n          <Formik\n            validationSchema={schema}\n            validateOnChange={false}\n            onSubmit={(values, actions) => {\n              const settingsRef = SquareColorFromDataSettingsRef(\n                settings.userId,\n              );\n              settingsRef.update(values).then(() => {\n                actions.resetForm();\n                actions.setSubmitting(false);\n                callback({ userId: settings.userId, settings: values });\n              });\n            }}\n            initialValues={{\n              amount: settings.settings.amount,\n              numGames: settings.settings.numGames,\n              targetTime: settings.settings.targetTime,\n              mistakesWeight: settings.settings.mistakesWeight,\n              timeWeight: settings.settings.timeWeight,\n            }}\n          >\n            {({ handleSubmit, handleChange, values, errors, isSubmitting }) => (\n              <Form noValidate onSubmit={handleSubmit}>\n                {showSettings ? (\n                  <>\n                    <Form.Group controlId=\"amount\">\n                      <Form.Label>Amount of Squares</Form.Label>\n                      <Form.Control\n                        required\n                        type=\"number\"\n                        name=\"amount\"\n                        placeholder=\"Amount of Squares\"\n                        value={values.amount}\n                        isInvalid={!!errors.amount}\n                        onChange={handleChange}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.targetTime}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group controlId=\"numGames\">\n                      <Form.Label>\n                        Number of previous Runs to be included\n                      </Form.Label>\n                      <Form.Control\n                        required\n                        type=\"number\"\n                        name=\"numGames\"\n                        placeholder=\"Num of prev. Runs\"\n                        value={values.numGames}\n                        isInvalid={!!errors.numGames}\n                        onChange={handleChange}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.numGames}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group controlId=\"targetTime\">\n                      <Form.Label>Time to be picked</Form.Label>\n                      <Form.Control\n                        required\n                        type=\"number\"\n                        name=\"targetTime\"\n                        placeholder=\"Target Time\"\n                        value={values.targetTime}\n                        isInvalid={!!errors.targetTime}\n                        onChange={handleChange}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.targetTime}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group controlId=\"mistakesWeight\">\n                      <Form.Label>Weight of Mistakes</Form.Label>\n                      <Form.Control\n                        required\n                        type=\"number\"\n                        name=\"mistakesWeight\"\n                        placeholder=\"Weight of Mistakes\"\n                        value={values.mistakesWeight}\n                        isInvalid={!!errors.mistakesWeight}\n                        onChange={handleChange}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.mistakesWeight}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group controlId=\"timeWeight\">\n                      <Form.Label>Weight of Time</Form.Label>\n                      <Form.Control\n                        required\n                        type=\"number\"\n                        name=\"timeWeight\"\n                        placeholder=\"Weight of Time\"\n                        value={values.timeWeight}\n                        isInvalid={!!errors.timeWeight}\n                        onChange={handleChange}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.timeWeight}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </>\n                ) : null}\n                <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\n                  Start ?\n                </Button>\n              </Form>\n            )}\n          </Formik>\n        </>\n      ) : (\n        <Button variant=\"primary\" onClick={callbackClick}>\n          Start\n        </Button>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { Form, Button, Card } from 'react-bootstrap';\nimport { Link, useHistory, Redirect } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport * as ROUTES from '../../constants/routes';\nimport styles from './Register.module.css';\nimport { createUser, useAuth } from '../Firebase';\nimport { NavbarMod } from '../layout';\n\nconst schema = yup.object().shape({\n  Username: yup\n    .string()\n    .required()\n    .min(2, 'Username has to be at minimum 2 Characters long')\n    .max(8, 'Username can be at most 8 characters long')\n    .required(\"Username can't be empty\"),\n  terms: yup.bool().isTrue('You have to accept the terms'),\n});\n\nfunction RegisterForm() {\n  const history = useHistory();\n  return (\n    <Formik\n      validationSchema={schema}\n      validateOnChange={false}\n      onSubmit={async (values, actions) => {\n        await createUser(values.Username)\n          .then((result) => {\n            actions.resetForm();\n            actions.setSubmitting(false);\n            result.user?.updateProfile({\n              displayName: values.Username,\n            });\n            history.push(ROUTES.HOME);\n          })\n          .catch((error) => {\n            actions.resetForm();\n            actions.setFieldError('Username', error.code);\n            actions.setSubmitting(false);\n          });\n      }}\n      initialValues={{\n        Username: '',\n        terms: false,\n      }}\n    >\n      {({ handleSubmit, handleChange, values, errors, isSubmitting }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Form.Group controlId=\"Username\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              name=\"Username\"\n              placeholder=\"Enter your Username\"\n              value={values.Username}\n              isInvalid={!!errors.Username}\n              onChange={handleChange}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.Username}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group>\n            <Form.Check\n              required\n              type=\"checkbox\"\n              name=\"terms\"\n              checked={values.terms}\n              label=\"Ich spiele keine Ehrenlosen\"\n              onChange={handleChange}\n              isInvalid={!!errors.terms}\n              feedback={errors.terms}\n            />\n          </Form.Group>\n          <Button className=\"w-100\" type=\"submit\" disabled={isSubmitting}>\n            Sign Up\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nconst RegisterPage = () => {\n  return (\n    <div className={styles.Container}>\n      <NavbarMod />\n      <Card bg=\"Light\" text=\"dark\" className={styles.CardContainer}>\n        <Card.Body>\n          <h2 className={styles.CardText}>Sign Up</h2>\n          <RegisterForm />\n        </Card.Body>\n        <div className={styles.CardText}>\n          Already have an Account? <Link to={ROUTES.LOG_IN}>Log In</Link>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport const Register = () => {\n  const { currentUser } = useAuth();\n  return currentUser ? <Redirect to={ROUTES.HOME} /> : <RegisterPage />;\n};\n","import React from 'react';\nimport { Form, Button, Card } from 'react-bootstrap';\nimport { Link, useHistory, Redirect } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport * as ROUTES from '../../constants/routes';\nimport styles from './Login.module.css';\nimport { signInWithUsername, useAuth } from '../Firebase';\nimport { NavbarMod } from '../layout';\n\nconst schema = yup.object().shape({\n  Username: yup\n    .string()\n    .required()\n    .min(2, 'Username has to be at minimum 2 Characters long')\n    .max(8, 'Username can be at most 8 characters long')\n    .required(\"Username can't be empty\"),\n});\n\nfunction LoginForm() {\n  const history = useHistory();\n  return (\n    <Formik\n      validationSchema={schema}\n      validateOnChange={false}\n      onSubmit={(values, actions) => {\n        signInWithUsername(values.Username)\n          .then(() => {\n            actions.resetForm();\n            actions.setSubmitting(false);\n            history.push(ROUTES.HOME);\n          })\n          .catch((error) => {\n            actions.resetForm();\n            actions.setFieldError('Username', error.code);\n            actions.setSubmitting(false);\n          });\n      }}\n      initialValues={{\n        Username: '',\n      }}\n    >\n      {({ handleSubmit, handleChange, values, errors, isSubmitting }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Form.Group controlId=\"Username\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              name=\"Username\"\n              placeholder=\"Enter your Username\"\n              value={values.Username}\n              isInvalid={!!errors.Username}\n              onChange={handleChange}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.Username}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Button className=\"w-100\" type=\"submit\" disabled={isSubmitting}>\n            Log In\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nconst LoginPage = () => {\n  return (\n    <div className={styles.Container}>\n      <NavbarMod />\n      <Card bg=\"dark\" text=\"light\" className={styles.CardContainer}>\n        <Card.Body>\n          <h2 className={styles.CardText}>Log In</h2>\n          <LoginForm />\n        </Card.Body>\n        <div className={styles.CardText}>\n          Dont have an Account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport const Login = () => {\n  const { currentUser } = useAuth();\n  return currentUser ? <Redirect to={ROUTES.HOME} /> : <LoginPage />;\n};\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { Register } from '../components/Register';\nimport { Login } from '../components/Login';\nimport { SquareColorStart } from '../components/Training';\nimport { UserProvider } from '../components/Firebase';\nimport styles from './App.module.css';\n\nimport * as ROUTES from '../constants/routes';\n\nexport default function App() {\n  return (\n    <UserProvider>\n      <HashRouter>\n        <div className={styles.Container}>\n          <Switch>\n            <Route exact path={ROUTES.LOG_IN} component={Login} />\n            <Route exact path={ROUTES.SIGN_UP} component={Register} />\n            <Route\n              exact\n              path={ROUTES.SQUARECOLORS}\n              component={SquareColorStart}\n            />\n            <Route>\n              <h1 className={styles.error}>PAGE NOT FOUND</h1>\n            </Route>\n          </Switch>\n        </div>\n      </HashRouter>\n    </UserProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}