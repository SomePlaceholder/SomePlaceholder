{"version":3,"sources":["components/Register/Register.module.css","components/Login/Login.module.css","components/layout/Navbar.module.css","App/App.module.css","components/Training/SquareColors/SquareColors.module.css","constants/routes.tsx","components/Firebase/Firebase.tsx","components/Firebase/Context.tsx","Chess/HelperFunctions.tsx","components/Training/SquareColors/randomSquare.tsx","components/Training/SquareColors/Header.tsx","components/Training/Charts.tsx","components/Training/SquareColors/FinishScreen.tsx","components/Firebase/SquareColorApi.tsx","components/Training/SquareColors/AnswerScreen.tsx","components/Training/SquareColors/SquareColorDialog.tsx","components/Training/SquareColors/SquareColors.tsx","components/layout/Navbar.tsx","components/Firebase/AuthApi.tsx","components/Training/SquareColors/Stats.tsx","components/Training/SquareColors/Startpage.tsx","components/Register/Register.tsx","components/Login/Login.tsx","App/index.tsx","index.tsx"],"names":["module","exports","SIGN_UP","LOG_IN","HOME","SQUARECOLORS","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","db","database","AuthContext","React","createContext","currentUser","useAuth","useContext","UserProvider","props","children","useState","setCurrentUser","useEffect","onAuthStateChanged","user","Provider","value","convertToAlgebra","input","stringX","x","String","fromCharCode","charCodeAt","y","whiteColorSquare","xEven","yEven","defaultFromDataSettings","amount","numGames","targetTime","mistakesWeight","timeWeight","randomSquare","callback","settings","getFromData","userId","then","resolved","squares","addData","randomSquares","random","i","randomSq","randomArray","AddReturnInfo","forEach","square","algebraSquare","Object","prototype","hasOwnProperty","call","infoData","chance","wrongSquares","timeSquares","AddFromRandom","Math","floor","a","dataRef","SquareColorDataOrdered","limitToLast","once","dataSnapshot","data","transformSquareColorData","map","dataAll","answers","squaresOverTime","squaresWrong","walkthrough","entry","answer","time","push","getFromDataSingle","AddFromData","card","min","length","randomOtherNum","otherCard","chanceOther","otherCardWeighted","keys","property","general","Header","count","correct","show","className","styles","HeadText","style","color","TimeChart","fill","AreaChart","width","height","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","tick","YAxis","Tooltip","Area","type","stroke","FinishScreen","restartCallback","dataRightAnswers","dataWrongAnswers","dataRightIndex","dataWrongIndex","avgTimeCorrect","avgTimeWrong","key","ref","timestamp","ServerValue","TIMESTAMP","putSquareColorMetaData","SquareColorMetaRef","uid","set","putSquareColorData","SquareColorDataRefFromKey","FinishText","round","ButtonContainer","Button","variant","onClick","FinishRestart","GraphAll","GraphText","AnswerScreen","handleKeyPress","event","nextCallback","bind","document","addEventListener","this","removeEventListener","addInfo","config","position","pieceTheme","getConfig","ChessboardShow","chessboard","ShowButton","textAlign","AddInfo","info","weights","mistake","Component","SquareColorDialog","currTimer","currIntervalId","buttonColor","timerStart","setInterval","timerStop","clearInterval","colorWhite","answerCallback","whiteSquare","AnswerButtons","FooterColorButtons","colorButton","CurrentSquare","SquareColors","setCount","setShow","finish","setFinish","setCorrect","loading","setLoading","setAnswers","setSquares","setAddInfo","callbackSquareData","undefined","defaultProps","NavbarMod","UserTile","history","useHistory","LoggedIn","DropdownButton","marginRight","title","displayName","Dropdown","Item","as","Link","to","ROUTES","signOut","LoggedOut","Nav","Navbar","Text","NavbarText","bar","Toggle","aria-controls","Brand","NavDropdown","id","onMouseEnter","onMouseLeave","StatsElement","stats","setStats","orderByChild","listener","on","snapshot","child","val","transformSquareColorMetaData","off","dataItems","element","dateInt","Date","Statsentry","getDate","getMonth","getFullYear","StatsList","reverse","Stats","SquareColorStart","start","setStart","setAmount","setSettings","settingsRef","SquareColorFromDataSettingsRef","settingsSnapshot","settingsSnapshotFunction","amountNum","settingsData","StartPage","showSettings","setShowSettings","schemaNoUser","yup","shape","required","max","schema","enableReinitialize","validationSchema","validateOnChange","onSubmit","values","actions","valueAm","update","resetForm","setSubmitting","initialValues","handleSubmit","handleChange","errors","isSubmitting","Form","noValidate","Group","controlId","Label","Control","name","placeholder","isInvalid","onChange","Feedback","disabled","SquareColorDataRef","transformSquareColorDataFromNode","Username","terms","isTrue","RegisterForm","username","createUserWithEmailAndPassword","result","updateProfile","catch","error","setFieldError","code","Check","checked","label","feedback","RegisterPage","Container","Card","bg","text","CardContainer","Body","CardText","Register","LoginForm","signInWithEmailAndPassword","LoginPage","Login","App","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b966ffcd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Register_Container__2nf1n\",\"CardContainer\":\"Register_CardContainer__3srrD\",\"CardText\":\"Register_CardText__31jmS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Login_Container__3nRSH\",\"CardContainer\":\"Login_CardContainer__1UQp9\",\"CardText\":\"Login_CardText__2sGXU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"Navbar_bar__24ZfR\",\"NavbarText\":\"Navbar_NavbarText__3UT7K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"App_Container__Qvkoa\",\"error\":\"App_error__3KXN9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"SquareColors_Container__3STX4\",\"HeadText\":\"SquareColors_HeadText__1Lhx0\",\"CurrentSquare\":\"SquareColors_CurrentSquare__1BDw4\",\"show\":\"SquareColors_show__1l7fX\",\"ChessboardShow\":\"SquareColors_ChessboardShow__1qKIr\",\"chessboard\":\"SquareColors_chessboard__2bqT9\",\"ShowButton\":\"SquareColors_ShowButton__3mKkv\",\"FooterColorButtons\":\"SquareColors_FooterColorButtons__1r3vP\",\"colorButton\":\"SquareColors_colorButton__23crt\",\"FinishScreen\":\"SquareColors_FinishScreen__1GdSd\",\"FinishText\":\"SquareColors_FinishText__2_Rrr\",\"FinishRestart\":\"SquareColors_FinishRestart__2Y7l2\",\"ButtonContainer\":\"SquareColors_ButtonContainer__1b21Z\",\"GraphAll\":\"SquareColors_GraphAll__OVYRz\",\"GraphText\":\"SquareColors_GraphText__28Ew3\",\"StatsList\":\"SquareColors_StatsList__3iKPV\",\"Statsentry\":\"SquareColors_Statsentry__1FDc2\",\"StartPage\":\"SquareColors_StartPage__3U7c-\",\"AddInfo\":\"SquareColors_AddInfo__3wOG0\"};","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const LOG_IN = '/login';\nexport const HOME = '/home';\n\nexport const SQUARECOLORS = '/squarecolors';\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const db = firebase.database();\n","import React, { ReactElement, useContext, useState, useEffect } from 'react';\nimport type firebase from 'firebase';\nimport { auth } from './Firebase';\n\ninterface UserProviderState {\n  currentUser: firebase.User | null;\n}\n\nconst AuthContext = React.createContext<UserProviderState>({\n  currentUser: null,\n});\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\ninterface UserProviderProps {\n  children: ReactElement;\n}\n\nexport function UserProvider(props: UserProviderProps) {\n  const { children } = props;\n  const [currentUser, setCurrentUser] = useState<firebase.User | null>(null);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n    });\n    return unsubscribe;\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ currentUser }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n","import type { Square } from './constants';\n\nexport function convertToAlgebra(input: Square): string {\n  const stringX = `${input.x}`;\n  const letter = String.fromCharCode(stringX.charCodeAt(0) + (97 - 49));\n  return letter + input.y;\n}\n\nexport function whiteColorSquare(input: Square): boolean {\n  const xEven = input.x % 2 === 0;\n  const yEven = input.y % 2 === 0;\n\n  return !((xEven && yEven) || (!xEven && !yEven));\n}\n","import { convertToAlgebra } from '../../../Chess';\n\nimport type { Square } from '../../../Chess';\n\nimport {\n  SquareColorDataOrdered,\n  transformSquareColorData,\n} from '../../Firebase';\n\nexport interface randomSquareSettings {\n  userId: string;\n  settings: fromDataSettings;\n}\n\nexport interface fromDataSettings {\n  amount?: number;\n  targetTime?: number;\n  numGames?: number;\n  mistakesWeight?: number;\n  timeWeight?: number;\n}\n\nexport const defaultFromDataSettings = {\n  amount: 50,\n  numGames: 10,\n  targetTime: 3,\n  mistakesWeight: 1,\n  timeWeight: 0.5,\n};\n\nexport function randomSquare(\n  amount: number,\n  // eslint-disable-next-line no-unused-vars\n  callback: (arg0: Square[], arg1: AddInfo) => void,\n  settings?: randomSquareSettings,\n) {\n  if (settings) {\n    getFromData(settings.userId, amount, settings.settings).then((resolved) => {\n      callback(resolved.squares, resolved.addData);\n    });\n  } else {\n    const squares = randomArray(amount);\n    const addData = AddFromRandom(squares);\n    callback(squares, addData);\n  }\n}\n\nfunction randomArray(amount: number) {\n  const randomSquares: Square[] = [];\n  randomSquares[0] = random();\n  for (let i = 1; i < amount; i += 1) {\n    let randomSq = random();\n    while (\n      randomSq.x === randomSquares[i - 1].x &&\n      randomSq.y === randomSquares[i - 1].y\n    ) {\n      randomSq = random();\n    }\n    randomSquares[i] = randomSq;\n  }\n\n  return randomSquares;\n}\n\nfunction random(): Square {\n  return {\n    x: Math.floor(Math.random() * 8) + 1,\n    y: Math.floor(Math.random() * 8) + 1,\n  };\n}\n\n/* \n    Normal Squares: 48 Indexes  - Weighted Squares: min(48, mistakes+timeMistakes) Indexes\n*/\n\nasync function getFromData(\n  userId: string,\n  amount: number,\n  settings: fromDataSettings,\n) {\n  const numGames = settings.numGames\n    ? settings.numGames\n    : defaultFromDataSettings.numGames;\n  const targetTime = settings.targetTime\n    ? settings.targetTime\n    : defaultFromDataSettings.targetTime;\n  const timeWeight = settings.timeWeight\n    ? settings.timeWeight\n    : defaultFromDataSettings.timeWeight;\n  const mistakesWeight = settings.mistakesWeight\n    ? settings.mistakesWeight\n    : defaultFromDataSettings.mistakesWeight;\n\n  const dataRef = SquareColorDataOrdered(userId).limitToLast(numGames);\n  const dataSnapshot = await dataRef.once('value');\n  const data = transformSquareColorData(dataSnapshot)[0].map(\n    (dataAll) => dataAll.answers,\n  );\n\n  const squaresOverTime: Square[] = [];\n  const squaresWrong: Square[] = [];\n\n  data.forEach((walkthrough) =>\n    walkthrough.forEach((entry) => {\n      if (!entry.answer) {\n        squaresWrong.push(entry.square);\n      } else if (entry.time > targetTime) {\n        squaresOverTime.push(entry.square);\n      }\n    }),\n  );\n\n  const randomSquares: Square[] = [];\n  randomSquares[0] = getFromDataSingle(\n    squaresOverTime,\n    squaresWrong,\n    timeWeight,\n    mistakesWeight,\n  );\n  for (let i = 1; i < amount; i += 1) {\n    let randomSq = getFromDataSingle(\n      squaresOverTime,\n      squaresWrong,\n      timeWeight,\n      mistakesWeight,\n    );\n    while (\n      randomSq.x === randomSquares[i - 1].x &&\n      randomSq.y === randomSquares[i - 1].y\n    ) {\n      randomSq = getFromDataSingle(\n        squaresOverTime,\n        squaresWrong,\n        timeWeight,\n        mistakesWeight,\n      );\n    }\n    randomSquares[i] = randomSq;\n  }\n\n  const addData = AddFromData(\n    randomSquares,\n    squaresOverTime,\n    squaresWrong,\n    timeWeight,\n    mistakesWeight,\n  );\n  return { squares: randomSquares, addData };\n}\n\nfunction getFromDataSingle(\n  squaresOverTime: Square[],\n  squaresWrong: Square[],\n  timeWeight: number,\n  mistakesWeight: number,\n) {\n  const card = 48 + Math.min(48, squaresOverTime.length + squaresWrong.length);\n  const randomNum = Math.floor(Math.random() * card);\n  if (randomNum < 48) {\n    return random();\n  }\n  const randomOtherNum =\n    Math.random() *\n    (squaresOverTime.length * timeWeight +\n      squaresWrong.length * mistakesWeight);\n  if (randomOtherNum < squaresOverTime.length * timeWeight) {\n    return squaresOverTime[Math.floor(randomOtherNum / timeWeight)];\n  }\n  return squaresWrong[\n    Math.floor(\n      (randomOtherNum - squaresOverTime.length * timeWeight) / mistakesWeight,\n    )\n  ];\n}\n\nexport interface AddSquareInfo {\n  chance: number;\n  wrongSquares: number;\n  timeSquares: number;\n}\n\nexport interface AddInfo {\n  [key: string]: AddSquareInfo;\n}\n\nfunction AddFromRandom(squares: Square[]) {\n  const AddReturnInfo: AddInfo = {};\n  squares.forEach((square) => {\n    const algebraSquare = convertToAlgebra(square);\n    if (!Object.prototype.hasOwnProperty.call(AddReturnInfo, algebraSquare)) {\n      const infoData = { chance: 1 / 48, wrongSquares: 0, timeSquares: 0 };\n      AddReturnInfo[algebraSquare] = infoData;\n    }\n  });\n\n  return AddReturnInfo;\n}\n\nfunction AddFromData(\n  squares: Square[],\n  squaresOverTime: Square[],\n  squaresWrong: Square[],\n  timeWeight: number,\n  mistakesWeight: number,\n) {\n  const AddReturnInfo: AddInfo = {};\n  const otherCard = squaresOverTime.length + squaresWrong.length;\n  const chanceOther = Math.min(48, otherCard) / (Math.min(48, otherCard) + 48);\n  const otherCardWeighted =\n    squaresOverTime.length * timeWeight + squaresWrong.length * mistakesWeight;\n\n  squaresOverTime.forEach((square) => {\n    const algebraSquare = convertToAlgebra(square);\n    if (!Object.prototype.hasOwnProperty.call(AddReturnInfo, algebraSquare)) {\n      const infoData = { chance: -1, wrongSquares: 0, timeSquares: 1 };\n      AddReturnInfo[algebraSquare] = infoData;\n    } else {\n      AddReturnInfo[algebraSquare].timeSquares += 1;\n    }\n  });\n\n  squaresWrong.forEach((square) => {\n    const algebraSquare = convertToAlgebra(square);\n    if (!Object.prototype.hasOwnProperty.call(AddReturnInfo, algebraSquare)) {\n      const infoData = { chance: -1, wrongSquares: 1, timeSquares: 0 };\n      AddReturnInfo[algebraSquare] = infoData;\n    } else {\n      AddReturnInfo[algebraSquare].wrongSquares += 1;\n    }\n  });\n\n  Object.keys(AddReturnInfo).forEach((property) => {\n    AddReturnInfo[property].chance =\n      (1 - chanceOther) * (1 / 48) +\n      chanceOther *\n        ((AddReturnInfo[property].timeSquares * timeWeight +\n          AddReturnInfo[property].wrongSquares * mistakesWeight) /\n          otherCardWeighted);\n  });\n\n  squares.forEach((square) => {\n    const algebraSquare = convertToAlgebra(square);\n    if (!Object.prototype.hasOwnProperty.call(AddReturnInfo, algebraSquare)) {\n      const infoData = {\n        chance: (1 - chanceOther) * (1 / 48),\n        wrongSquares: 0,\n        timeSquares: 0,\n      };\n      AddReturnInfo[algebraSquare] = infoData;\n    }\n  });\n\n  AddReturnInfo.general = {\n    chance: chanceOther,\n    wrongSquares: squaresWrong.length,\n    timeSquares: squaresOverTime.length,\n  };\n\n  return AddReturnInfo;\n}\n","import React, { ReactElement } from 'react';\n\nimport styles from './SquareColors.module.css';\n\ninterface HeaderProps {\n  amount: number;\n  count: number;\n  correct: number;\n  show: boolean;\n}\n\nexport const Header: React.FC<HeaderProps> = (props): ReactElement => {\n  const { amount, count, correct, show } = props;\n  return (\n    <div className={styles.HeadText}>\n      <span>\n        Question: {count}/{amount}{' '}\n        <span style={{ color: '#7FFF00' }}>Correct: </span>\n        {correct}/{show ? count : count - 1}\n      </span>\n    </div>\n  );\n};\n","/* eslint-disable react/prop-types */\nimport React, { ReactElement } from 'react';\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n} from 'recharts';\n\nexport const TimeChart: React.FC<{\n  data: { x: string; time: number }[];\n  fill: string;\n  color?: string;\n}> = (props): ReactElement => {\n  const { data, fill, color } = props;\n\n  return (\n    <AreaChart\n      width={600}\n      height={200}\n      data={data}\n      margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"x\" tick={{ fill: color }} />\n      <YAxis tick={{ fill: color }} />\n      <Tooltip />\n      <Area type=\"monotone\" dataKey=\"time\" stroke={fill} fill={fill} />\n    </AreaChart>\n  );\n};\n","import React, { useEffect, ReactElement } from 'react';\nimport { Button } from 'react-bootstrap';\nimport {\n  useAuth,\n  SquareColorMetaRef,\n  SquareColorDataRefFromKey,\n  putSquareColorMetaData,\n  putSquareColorData,\n} from '../../Firebase';\nimport { convertToAlgebra } from '../../../Chess';\nimport { TimeChart } from '../Charts';\n\nimport { answerData } from './SquareColors';\n\nimport styles from './SquareColors.module.css';\n\nexport interface FinishScreenProps {\n  amount: number;\n  answers: answerData[];\n  restartCallback: () => void;\n}\n\nexport const FinishScreen: React.FC<FinishScreenProps> = (\n  props,\n): ReactElement => {\n  const { amount, answers, restartCallback } = props;\n  const { currentUser } = useAuth();\n  const data = [];\n\n  for (let i = 0; i < amount; i += 1) {\n    data[i] = { x: convertToAlgebra(answers[i].square), time: answers[i].time };\n  }\n\n  const dataRightAnswers = [];\n  const dataWrongAnswers = [];\n\n  let dataRightIndex = 0;\n  let dataWrongIndex = 0;\n\n  let avgTimeCorrect = 0;\n  let avgTimeWrong = 0;\n  for (let i = 0; i < amount; i += 1) {\n    if (answers[i].answer === true) {\n      dataRightAnswers[dataRightIndex] = {\n        x: convertToAlgebra(answers[i].square),\n        time: answers[i].time,\n      };\n      dataRightIndex += 1;\n      avgTimeCorrect += answers[i].time;\n    } else {\n      dataWrongAnswers[dataWrongIndex] = {\n        x: convertToAlgebra(answers[i].square),\n        time: answers[i].time,\n      };\n      dataWrongIndex += 1;\n      avgTimeWrong += answers[i].time;\n    }\n  }\n  avgTimeCorrect = dataRightIndex === 0 ? -1 : avgTimeCorrect / dataRightIndex;\n  avgTimeWrong = dataWrongIndex === 0 ? -1 : avgTimeWrong / dataWrongIndex;\n\n  useEffect(() => {\n    if (currentUser) {\n      const metaRef = SquareColorMetaRef(currentUser.uid);\n      const key = putSquareColorMetaData(metaRef, {\n        amount,\n        correct: dataRightIndex,\n        avgTimeCorrect,\n        avgTimeWrong,\n        timestamp: -1,\n      });\n      const dataRef = SquareColorDataRefFromKey(currentUser.uid, key);\n      putSquareColorData(dataRef, { timestamp: -1, answers });\n    }\n  }, [\n    amount,\n    currentUser,\n    dataRightIndex,\n    dataWrongIndex,\n    avgTimeCorrect,\n    avgTimeWrong,\n    answers,\n  ]);\n\n  return (\n    <div className={styles.FinishScreen}>\n      <div className={styles.FinishText}>\n        <div>\n          You got <span style={{ color: 'white' }}>{dataRightIndex}</span>{' '}\n          correct Answers from a total of{' '}\n          <span style={{ color: 'white' }}>{amount}</span> Questions.\n        </div>\n        <div>\n          You got{' '}\n          <span style={{ color: '#7FFF00' }}>\n            {' '}\n            {Math.round((dataRightIndex / amount) * 100)}%\n          </span>{' '}\n          correct.\n        </div>\n      </div>\n      <div className={styles.ButtonContainer}>\n        <Button\n          variant=\"primary\"\n          onClick={restartCallback}\n          className={styles.FinishRestart}\n        >\n          Restart?\n        </Button>\n      </div>\n\n      <div className={styles.GraphAll}>\n        <div className={styles.GraphText} style={{ color: 'white' }}>\n          All Stats:{' '}\n        </div>\n        <TimeChart data={data} color=\"#8884d8\" fill=\"#8884d8\" />\n        <div className={styles.GraphText} style={{ color: '#7FFF00' }}>\n          Right Answers:\n        </div>\n        <TimeChart data={dataRightAnswers} color=\"#7FFF00\" fill=\"#7FFF00\" />\n        <div className={styles.GraphText} style={{ color: '#DC143C' }}>\n          Wrong answers:\n        </div>\n        <TimeChart data={dataWrongAnswers} color=\"#DC143C\" fill=\"#DC143C\" />\n      </div>\n    </div>\n  );\n};\n","import firebase from 'firebase';\nimport { db } from './Firebase';\n\nimport type { answerData, fromDataSettings } from '../Training';\n\nimport { defaultFromDataSettings } from '../Training';\n\nexport interface SquareColorMetaData {\n  amount: number;\n  correct: number;\n  timestamp: number;\n  avgTimeCorrect: number;\n  avgTimeWrong: number;\n}\n\nexport function SquareColorMetaRef(\n  userId: string,\n): firebase.database.Reference {\n  return db.ref(`users/${userId}/SquareColors/log`);\n}\n\nexport function SquareColorMetaOrdered(\n  userId: string,\n): firebase.database.Query {\n  return SquareColorMetaRef(userId).orderByChild('timestamp');\n}\n\nexport function putSquareColorMetaData(\n  ref: firebase.database.Reference,\n  props: SquareColorMetaData,\n): string | null {\n  return ref.push({\n    ...props,\n    timestamp: firebase.database.ServerValue.TIMESTAMP,\n  }).key;\n}\n\nexport function transformSquareColorMetaData(\n  snapshot: firebase.database.DataSnapshot,\n): [SquareColorMetaData[], (string | null)[]] {\n  const data: SquareColorMetaData[] = [];\n  const keys: (string | null)[] = [];\n  snapshot.forEach((children) => {\n    data.push({\n      amount: children.child('amount').val(),\n      correct: children.child('correct').val(),\n      timestamp: children.child('timestamp').val(),\n      avgTimeCorrect: children.child('avgTimeCorrect').val(),\n      avgTimeWrong: children.child('avgTimeWrong').val(),\n    });\n    keys.push(children.key);\n  });\n\n  return [data, keys];\n}\n\nexport interface SquareColorData {\n  timestamp: number;\n  answers: answerData[];\n}\n\nexport function SquareColorDataRef(userId: string) {\n  return db.ref(`users/${userId}/SquareColors/logData`);\n}\n\nexport function SquareColorDataOrdered(\n  userId: string,\n): firebase.database.Query {\n  return SquareColorDataRef(userId).orderByChild('timestamp');\n}\n\nexport function SquareColorDataRefFromKey(userId: string, key: string | null) {\n  return db.ref(`users/${userId}/SquareColors/logData/${key}`);\n}\n\nexport function putSquareColorData(\n  dataRef: firebase.database.Reference,\n  data: SquareColorData,\n) {\n  dataRef.set({\n    ...data,\n    timestamp: firebase.database.ServerValue.TIMESTAMP,\n  });\n}\n\nexport function transformSquareColorData(\n  snapshot: firebase.database.DataSnapshot,\n): [SquareColorData[], (string | null)[]] {\n  const data: SquareColorData[] = [];\n  const keys: (string | null)[] = [];\n  snapshot.forEach((children) => {\n    data.push(transformSquareColorDataFromNode(children)[0]);\n    keys.push(children.key);\n  });\n\n  return [data, keys];\n}\n\nexport function transformSquareColorDataFromNode(\n  snapshot: firebase.database.DataSnapshot,\n): [SquareColorData, string | null] {\n  const data = {\n    timestamp: snapshot.child('timestamp').val(),\n    answers: snapshot.child('answers').val(),\n  };\n  const { key } = snapshot;\n\n  return [data, key];\n}\n\nexport function SquareColorFromDataSettingsRef(userId: string) {\n  return db.ref(`users/${userId}/SquareColors/settings/fromData`);\n}\n\nexport function transformSquareColorFromDataSettings(\n  snapshot: firebase.database.DataSnapshot,\n): fromDataSettings {\n  return { ...defaultFromDataSettings, ...snapshot.val() };\n}\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport ChessboardJs from 'react-chessboardjs-wrapper';\nimport styles from './SquareColors.module.css';\nimport type { Square } from '../../../Chess';\nimport { convertToAlgebra, whiteColorSquare } from '../../../Chess';\n\nimport type { AddSquareInfo } from './randomSquare';\n\nconst wK = 'wK';\nconst bK = 'bK';\nconst pieceTheme = './chesspieces/{piece}.png';\n\nconst getConfig = (square: Square) => {\n  const algebraic = convertToAlgebra(square);\n  const position: { [key: string]: string } = {};\n  position[algebraic] = whiteColorSquare(square) ? wK : bK;\n  const config = { position, pieceTheme };\n\n  return config;\n};\n\ninterface AnswerScreenProps {\n  answer: boolean;\n  square: Square;\n  time: number;\n  nextCallback: () => void;\n  addInfo: {\n    info: AddSquareInfo;\n    general: AddSquareInfo;\n    weights?: { time: number; mistake: number };\n  };\n}\n\nexport class AnswerScreen extends React.Component<AnswerScreenProps> {\n  constructor(props: AnswerScreenProps) {\n    super(props);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyPress, false);\n  }\n\n  handleKeyPress = (event: KeyboardEvent) => {\n    const { nextCallback } = this.props;\n    if (event.key === ' ') {\n      nextCallback();\n    }\n  };\n\n  render() {\n    const { answer, square, nextCallback, addInfo, time } = this.props;\n    const config = getConfig(square);\n    return (\n      <div className={styles.ChessboardShow}>\n        {answer ? (\n          <div className={styles.show}>\n            {convertToAlgebra(square)}:\n            <span style={{ color: '#7FFF00' }}>Correct</span>\n          </div>\n        ) : (\n          <div className={styles.show}>\n            {convertToAlgebra(square)}:\n            <span style={{ color: '#DC143C' }}>Wrong</span>\n          </div>\n        )}\n        <div className={styles.chessboard}>\n          <ChessboardJs config={config} />\n        </div>\n\n        <Button\n          className={styles.ShowButton}\n          variant=\"primary\"\n          onClick={nextCallback}\n        >\n          Next\n        </Button>\n        <div style={{ textAlign: 'center', color: '#b7e9ff' }}>\n          Time took: {time} seconds\n        </div>\n        {addInfo ? (\n          <>\n            <div className={styles.AddInfo}>\n              <div>Chance: {Math.floor(addInfo.info.chance * 1000) / 10}%</div>{' '}\n              From OverTime: {addInfo.info.timeSquares} Wrong:{' '}\n              {addInfo.info.wrongSquares}\n              <div>\n                Total OverTime: {addInfo.general.timeSquares} Total wrong:{' '}\n                {addInfo.general.wrongSquares}\n              </div>\n              <div>\n                Chance of Other:{' '}\n                {Math.floor(addInfo.general.chance * 1000) / 10}%\n                {addInfo.weights ? (\n                  <>\n                    <div>\n                      Chance of OverTime:{' '}\n                      {addInfo.general.timeSquares === 0\n                        ? 0\n                        : Math.floor(\n                            ((addInfo.general.timeSquares *\n                              addInfo.weights.time) /\n                              (addInfo.general.timeSquares *\n                                addInfo.weights.time +\n                                addInfo.general.wrongSquares *\n                                  addInfo.weights.mistake)) *\n                              1000,\n                          ) / 10}{' '}\n                      %\n                    </div>\n                    <div>\n                      Chance of Mistake:{' '}\n                      {addInfo.general.wrongSquares === 0\n                        ? 0\n                        : Math.floor(\n                            ((addInfo.general.wrongSquares *\n                              addInfo.weights.mistake) /\n                              (addInfo.general.timeSquares *\n                                addInfo.weights.time +\n                                addInfo.general.wrongSquares *\n                                  addInfo.weights.mistake)) *\n                              1000,\n                          ) / 10}{' '}\n                      %\n                    </div>\n                  </>\n                ) : null}\n              </div>\n            </div>\n          </>\n        ) : null}\n      </div>\n    );\n  }\n}\n","import React, { ReactElement } from 'react';\nimport { Button } from 'react-bootstrap';\nimport type { Square } from '../../../Chess';\nimport { convertToAlgebra, whiteColorSquare } from '../../../Chess';\n\nimport styles from './SquareColors.module.css';\n\ninterface DialogProps {\n  amount: number;\n  square: Square;\n  // eslint-disable-next-line no-unused-vars\n  answerCallback: (arg0: boolean, arg1: number) => void;\n}\n\nexport class SquareColorDialog extends React.Component<DialogProps> {\n  private time: number;\n\n  private currTimer: number;\n\n  private currIntervalId: any;\n\n  constructor(props: DialogProps) {\n    super(props);\n\n    this.buttonColor = this.buttonColor.bind(this);\n\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n\n    this.timerStart = this.timerStart.bind(this);\n    this.timerStop = this.timerStop.bind(this);\n\n    this.currTimer = 0;\n    this.time = 0;\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress, false);\n    this.timerStart();\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyPress, false);\n    clearInterval(this.currIntervalId);\n  }\n\n  handleKeyPress = (event: KeyboardEvent) => {\n    if (event.key === 'ArrowLeft') {\n      this.buttonColor(true);\n    } else if (event.key === 'ArrowRight') {\n      this.buttonColor(false);\n    }\n  };\n\n  timerStart = () => {\n    this.currIntervalId = setInterval(() => {\n      this.currTimer += 100;\n    }, 100);\n  };\n\n  timerStop = () => {\n    clearInterval(this.currIntervalId);\n    this.time = this.currTimer / 1000;\n  };\n\n  buttonColor = (colorWhite: boolean) => {\n    const { square, answerCallback } = this.props;\n    this.timerStop();\n    const whiteSquare = whiteColorSquare(square);\n    if (whiteSquare === colorWhite || !whiteSquare === !colorWhite) {\n      answerCallback(true, this.time);\n    } else {\n      answerCallback(false, this.time);\n    }\n  };\n\n  render() {\n    const { square } = this.props;\n    const AnswerButtons: React.FC = (): ReactElement => {\n      return (\n        <div className={styles.FooterColorButtons}>\n          <Button\n            className={styles.colorButton}\n            onClick={() => this.buttonColor(true)}\n          >\n            White\n          </Button>\n          <Button\n            className={styles.colorButton}\n            onClick={() => this.buttonColor(false)}\n          >\n            Black\n          </Button>\n        </div>\n      );\n    };\n\n    return (\n      <div>\n        <div className={styles.CurrentSquare}>{convertToAlgebra(square)}</div>\n        <AnswerButtons />\n      </div>\n    );\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n  randomSquare,\n  randomSquareSettings,\n  defaultFromDataSettings,\n} from './randomSquare';\nimport { convertToAlgebra } from '../../../Chess';\nimport type { Square } from '../../../Chess';\nimport { Header } from './Header';\nimport { FinishScreen } from './FinishScreen';\nimport { AnswerScreen } from './AnswerScreen';\nimport { SquareColorDialog } from './SquareColorDialog';\n\nimport type { AddInfo } from './randomSquare';\n\ninterface SquareProps {\n  amount: number;\n  settings?: randomSquareSettings;\n}\n\nexport interface answerData {\n  square: Square;\n  answer: boolean;\n  time: number;\n}\n\nexport const SquareColors: React.FC<SquareProps> = (props: SquareProps) => {\n  const { amount, settings } = props;\n  const [count, setCount] = useState(1);\n  const [show, setShow] = useState(false);\n  const [finish, setFinish] = useState(false);\n  const [correct, setCorrect] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  const [answers, setAnswers] = useState<answerData[]>([]);\n\n  const [squares, setSquares] = useState<Square[]>([]);\n  const [addInfo, setAddInfo] = useState<AddInfo>({});\n\n  useEffect(() => {\n    randomSquare(amount, callbackSquareData, settings);\n  }, [amount, settings]);\n\n  const restart = () => {\n    setLoading(true);\n    randomSquare(amount, callbackSquareData, settings);\n    setAnswers([]);\n    setCount(1);\n    setCorrect(0);\n    setShow(false);\n    setFinish(false);\n  };\n\n  function callbackSquareData(square: Square[], addData: AddInfo) {\n    setSquares(square);\n    setAddInfo(addData);\n    setLoading(false);\n  }\n\n  const increase = () => {\n    setShow(false);\n    if (count < amount) {\n      setCount(count + 1);\n    } else {\n      setFinish(true);\n    }\n  };\n\n  if (loading) {\n    return <div>LOADING</div>;\n  }\n\n  if (!finish) {\n    const weights = settings\n      ? {\n          time: settings.settings.timeWeight\n            ? settings.settings.timeWeight\n            : defaultFromDataSettings.timeWeight,\n          mistake: settings.settings.mistakesWeight\n            ? settings.settings.mistakesWeight\n            : defaultFromDataSettings.mistakesWeight,\n        }\n      : undefined;\n    return (\n      <div>\n        <Header amount={amount} count={count} show={show} correct={correct} />\n        {!show ? (\n          <SquareColorDialog\n            amount={amount}\n            square={squares[count - 1]}\n            answerCallback={(answer, time) => {\n              setAnswers([\n                ...answers,\n                { square: squares[count - 1], answer, time },\n              ]);\n              if (answer) {\n                setCorrect(correct + 1);\n              }\n              setShow(true);\n            }}\n          />\n        ) : (\n          <AnswerScreen\n            square={squares[count - 1]}\n            answer={answers[count - 1].answer}\n            time={answers[count - 1].time}\n            addInfo={{\n              info: addInfo[convertToAlgebra(squares[count - 1])],\n              general: addInfo.general,\n              weights,\n            }}\n            nextCallback={() => {\n              increase();\n              setShow(false);\n            }}\n          />\n        )}\n      </div>\n    );\n  }\n  return (\n    <FinishScreen amount={amount} answers={answers} restartCallback={restart} />\n  );\n};\n\nSquareColors.defaultProps = {\n  settings: undefined,\n};\n","import React, { useState } from 'react';\nimport {\n  Navbar,\n  Nav,\n  DropdownButton,\n  Dropdown,\n  NavDropdown,\n} from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport styles from './Navbar.module.css';\nimport * as ROUTES from '../../constants/routes';\nimport { useAuth, signOut } from '../Firebase';\n\nexport function NavbarMod() {\n  const { currentUser } = useAuth();\n  const [show, setShow] = useState(false);\n  const showDropdown = () => {\n    setShow(!show);\n  };\n  const hideDropdown = () => {\n    setShow(false);\n  };\n\n  const UserTile: React.FC = () => {\n    const history = useHistory();\n    const LoggedIn = () => (\n      <DropdownButton\n        style={{ marginRight: '60px' }}\n        variant=\"secondary\"\n        title={currentUser?.displayName}\n      >\n        <Dropdown.Item as={Link} to={ROUTES.HOME}>\n          Home\n        </Dropdown.Item>\n        <Dropdown.Item\n          onClick={async () => {\n            await signOut().then(() => {\n              history.push(ROUTES.HOME);\n            });\n          }}\n        >\n          Log Out\n        </Dropdown.Item>\n      </DropdownButton>\n    );\n\n    const LoggedOut = () => (\n      <Nav>\n        <Navbar.Text as={Link} to={ROUTES.LOG_IN} className={styles.NavbarText}>\n          Log In\n        </Navbar.Text>\n      </Nav>\n    );\n\n    return currentUser ? <LoggedIn /> : <LoggedOut />;\n  };\n\n  return (\n    <Navbar className={styles.bar}>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Brand as={Link} to=\"/\">\n        Something\n      </Navbar.Brand>\n      <NavDropdown\n        title=\"Dropdown\"\n        id=\"collasible-nav-dropdown\"\n        show={show}\n        onMouseEnter={showDropdown}\n        onMouseLeave={hideDropdown}\n      >\n        <NavDropdown.Item\n          as={Link}\n          to={ROUTES.SQUARECOLORS}\n          className={styles.NavbarText}\n        >\n          Square Colors\n        </NavDropdown.Item>\n      </NavDropdown>\n      <Nav className=\"mr-auto\" />\n      <UserTile />\n    </Navbar>\n  );\n}\n","import firebase from 'firebase';\nimport { auth } from './Firebase';\n// *** Auth API ***\nexport function createUser(\n  username: string,\n): Promise<firebase.auth.UserCredential> {\n  return auth.createUserWithEmailAndPassword(\n    `${username}@${username}.com`,\n    `${username}@${username}.com`,\n  );\n}\n\nexport function signInWithUsername(\n  username: string,\n): Promise<firebase.auth.UserCredential> {\n  return auth.signInWithEmailAndPassword(\n    `${username}@${username}.com`,\n    `${username}@${username}.com`,\n  );\n}\n\nexport function signOut(): Promise<void> {\n  return auth.signOut();\n}\n","import React, { ReactElement, useState, useEffect } from 'react';\nimport type firebase from 'firebase';\nimport {\n  useAuth,\n  SquareColorMetaOrdered,\n  SquareColorMetaData,\n  transformSquareColorMetaData,\n} from '../../Firebase';\n\nimport styles from './SquareColors.module.css';\n\nconst StatsElement: React.FC<{ user: firebase.User }> = (\n  props,\n): ReactElement => {\n  const { user } = props;\n  const [stats, setStats] = useState<SquareColorMetaData[]>([]);\n  useEffect(() => {\n    const dataRef = SquareColorMetaOrdered(user.uid).limitToLast(5);\n    const listener = dataRef.on('value', (snapshot) => {\n      setStats(transformSquareColorMetaData(snapshot)[0]);\n    });\n    return () => dataRef.off('value', listener);\n  }, [user]);\n\n  const dataItems = stats.map((element) => {\n    const dateInt = new Date(+element.timestamp);\n    return (\n      <li className={styles.Statsentry} key={element.timestamp}>\n        <span style={{ color: 'white' }}>\n          {`${dateInt.getDate()}/${dateInt.getMonth()}/${dateInt.getFullYear()}`}\n          :\n        </span>\n        <span style={{ color: '#7FFF00' }}>\n          {Math.round((element.correct / element.amount) * 100)}%\n        </span>\n        <span style={{ color: 'wheat' }}> Correct</span>\n      </li>\n    );\n  });\n\n  return (\n    <div>\n      <span className={styles.StatsList}>Latest Entries:</span>\n      <ul>{dataItems.reverse()}</ul>\n    </div>\n  );\n};\n\nexport const Stats: React.FC = () => {\n  const { currentUser } = useAuth();\n  if (currentUser) {\n    return <StatsElement user={currentUser} />;\n  }\n  return null;\n};\n","import React, { ReactElement, useState, useEffect } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { SquareColors } from './SquareColors';\nimport { NavbarMod } from '../../layout';\nimport { Stats } from './Stats';\n\nimport {\n  useAuth,\n  SquareColorFromDataSettingsRef,\n  transformSquareColorFromDataSettings,\n} from '../../Firebase';\n\nimport { randomSquareSettings } from './randomSquare';\n\nimport styles from './SquareColors.module.css';\n\nexport const SquareColorStart: React.FC = (): ReactElement => {\n  const [start, setStart] = useState(false);\n  const [amount, setAmount] = useState(3);\n  const [settings, setSettings] = useState<randomSquareSettings | undefined>(\n    undefined,\n  );\n\n  const { currentUser } = useAuth();\n  useEffect(() => {\n    if (currentUser) {\n      const settingsRef = SquareColorFromDataSettingsRef(currentUser.uid);\n      const settingsSnapshotFunction = async () => {\n        const settingsSnapshot = await settingsRef.once('value');\n        setSettings({\n          userId: currentUser.uid,\n          settings: transformSquareColorFromDataSettings(settingsSnapshot),\n        });\n      };\n\n      settingsSnapshotFunction();\n    }\n  }, [currentUser]);\n\n  const settingsCallback = (\n    amountNum: number,\n    settingsData?: randomSquareSettings,\n  ) => {\n    setSettings(settingsData);\n    setAmount(amountNum);\n    setStart(true);\n  };\n\n  return (\n    <div>\n      <NavbarMod />\n      {start ? (\n        <SquareColors settings={settings} amount={amount} />\n      ) : (\n        <StartPage settings={settings} callback={settingsCallback} />\n      )}\n    </div>\n  );\n};\n\ninterface StartPageProps {\n  // eslint-disable-next-line no-unused-vars\n  callback: (amountNum: number, settings?: randomSquareSettings) => void;\n  settings?: randomSquareSettings;\n}\n\nconst StartPage: React.FC<StartPageProps> = (props): ReactElement => {\n  const { callback, settings } = props;\n  const [showSettings, setShowSettings] = useState(false);\n\n  const schemaNoUser = yup.object().shape({\n    amount: yup\n      .number()\n      .required()\n      .min(1, 'Minimum 1 Square')\n      .max(100, 'Max of 100 Squares')\n      .required('Have to specify an amount of squares'),\n  });\n\n  const schema = yup.object().shape({\n    amount: yup\n      .number()\n      .required()\n      .min(1, 'Minimum 1 Square')\n      .max(100, 'Max of 100 Squares')\n      .required('Have to specify an amount of squares'),\n    numGames: yup\n      .number()\n      .required()\n      .min(1, 'Minimum has to be 1')\n      .max(90, 'Maximum of 90 allowed')\n      .required('Number of Games has to be specified'),\n\n    targetTime: yup\n      .number()\n      .required()\n      .min(0, 'Minimum of 0 Seconds')\n      .required('Time has to be specified'),\n\n    mistakesWeight: yup\n      .number()\n      .required()\n      .min(0, 'Minimum of 0 Weight')\n      .max(999, 'Use a smaller Number')\n      .required('Weight has to be specified'),\n\n    timeWeight: yup\n      .number()\n      .required()\n      .min(0, 'Minimum of 0 Weight')\n      .max(999, 'Use a smaller Number')\n      .required('Weight has to be specified'),\n  });\n\n  return (\n    <div className={styles.StartPage}>\n      <Stats />\n      <Button\n        variant=\"primary\"\n        onClick={() => {\n          setShowSettings(!showSettings);\n        }}\n      >\n        Settings\n      </Button>\n      <Formik\n        enableReinitialize\n        validationSchema={settings ? schema : schemaNoUser}\n        validateOnChange={false}\n        onSubmit={(values, actions) => {\n          const valueAm = values.amount ? values.amount : 2;\n          if (settings) {\n            const settingsRef = SquareColorFromDataSettingsRef(settings.userId);\n            settingsRef.update(values).then(() => {\n              actions.resetForm();\n              actions.setSubmitting(false);\n              callback(valueAm, {\n                userId: settings.userId,\n                settings: values,\n              });\n            });\n          } else {\n            callback(valueAm);\n          }\n        }}\n        initialValues={\n          settings\n            ? {\n                amount: settings.settings.amount,\n                numGames: settings.settings.numGames,\n                targetTime: settings.settings.targetTime,\n                mistakesWeight: settings.settings.mistakesWeight,\n                timeWeight: settings.settings.timeWeight,\n              }\n            : {\n                amount: 50,\n              }\n        }\n      >\n        {({ handleSubmit, handleChange, values, errors, isSubmitting }) => (\n          <Form noValidate onSubmit={handleSubmit}>\n            {showSettings ? (\n              <>\n                <Form.Group controlId=\"amount\">\n                  <Form.Label>Amount of Squares</Form.Label>\n                  <Form.Control\n                    required\n                    type=\"number\"\n                    name=\"amount\"\n                    placeholder=\"Amount of Squares\"\n                    value={values.amount}\n                    isInvalid={!!errors.amount}\n                    onChange={handleChange}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.amount}\n                  </Form.Control.Feedback>\n                </Form.Group>\n                {settings ? (\n                  <>\n                    <Form.Group controlId=\"numGames\">\n                      <Form.Label>\n                        Number of previous Runs to be included\n                      </Form.Label>\n                      <Form.Control\n                        required\n                        type=\"number\"\n                        name=\"numGames\"\n                        placeholder=\"Num of prev. Runs\"\n                        value={values.numGames}\n                        isInvalid={!!errors.numGames}\n                        onChange={handleChange}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.numGames}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group controlId=\"targetTime\">\n                      <Form.Label>Time to be picked</Form.Label>\n                      <Form.Control\n                        required\n                        type=\"number\"\n                        name=\"targetTime\"\n                        placeholder=\"Target Time\"\n                        value={values.targetTime}\n                        isInvalid={!!errors.targetTime}\n                        onChange={handleChange}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.targetTime}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group controlId=\"mistakesWeight\">\n                      <Form.Label>Weight of Mistakes</Form.Label>\n                      <Form.Control\n                        required\n                        type=\"number\"\n                        name=\"mistakesWeight\"\n                        placeholder=\"Weight of Mistakes\"\n                        value={values.mistakesWeight}\n                        isInvalid={!!errors.mistakesWeight}\n                        onChange={handleChange}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.mistakesWeight}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group controlId=\"timeWeight\">\n                      <Form.Label>Weight of Time</Form.Label>\n                      <Form.Control\n                        required\n                        type=\"number\"\n                        name=\"timeWeight\"\n                        placeholder=\"Weight of Time\"\n                        value={values.timeWeight}\n                        isInvalid={!!errors.timeWeight}\n                        onChange={handleChange}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.timeWeight}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </>\n                ) : null}\n              </>\n            ) : null}\n            <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\n              Start ?\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Form, Button, Card } from 'react-bootstrap';\nimport { Link, useHistory, Redirect } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport * as ROUTES from '../../constants/routes';\nimport styles from './Register.module.css';\nimport { createUser, useAuth } from '../Firebase';\nimport { NavbarMod } from '../layout';\n\nconst schema = yup.object().shape({\n  Username: yup\n    .string()\n    .required()\n    .min(2, 'Username has to be at minimum 2 Characters long')\n    .max(8, 'Username can be at most 8 characters long')\n    .required(\"Username can't be empty\"),\n  terms: yup.bool().isTrue('You have to accept the terms'),\n});\n\nfunction RegisterForm() {\n  const history = useHistory();\n  return (\n    <Formik\n      validationSchema={schema}\n      validateOnChange={false}\n      onSubmit={async (values, actions) => {\n        await createUser(values.Username)\n          .then((result) => {\n            actions.resetForm();\n            actions.setSubmitting(false);\n            result.user?.updateProfile({\n              displayName: values.Username,\n            });\n            history.push(ROUTES.HOME);\n          })\n          .catch((error) => {\n            actions.resetForm();\n            actions.setFieldError('Username', error.code);\n            actions.setSubmitting(false);\n          });\n      }}\n      initialValues={{\n        Username: '',\n        terms: false,\n      }}\n    >\n      {({ handleSubmit, handleChange, values, errors, isSubmitting }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Form.Group controlId=\"Username\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              name=\"Username\"\n              placeholder=\"Enter your Username\"\n              value={values.Username}\n              isInvalid={!!errors.Username}\n              onChange={handleChange}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.Username}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group>\n            <Form.Check\n              required\n              type=\"checkbox\"\n              name=\"terms\"\n              checked={values.terms}\n              label=\"Ich spiele keine Ehrenlosen\"\n              onChange={handleChange}\n              isInvalid={!!errors.terms}\n              feedback={errors.terms}\n            />\n          </Form.Group>\n          <Button className=\"w-100\" type=\"submit\" disabled={isSubmitting}>\n            Sign Up\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nconst RegisterPage = () => {\n  return (\n    <div className={styles.Container}>\n      <NavbarMod />\n      <Card bg=\"Light\" text=\"dark\" className={styles.CardContainer}>\n        <Card.Body>\n          <h2 className={styles.CardText}>Sign Up</h2>\n          <RegisterForm />\n        </Card.Body>\n        <div className={styles.CardText}>\n          Already have an Account? <Link to={ROUTES.LOG_IN}>Log In</Link>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport const Register = () => {\n  const { currentUser } = useAuth();\n  return currentUser ? <Redirect to={ROUTES.HOME} /> : <RegisterPage />;\n};\n","import React from 'react';\nimport { Form, Button, Card } from 'react-bootstrap';\nimport { Link, useHistory, Redirect } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport * as ROUTES from '../../constants/routes';\nimport styles from './Login.module.css';\nimport { signInWithUsername, useAuth } from '../Firebase';\nimport { NavbarMod } from '../layout';\n\nconst schema = yup.object().shape({\n  Username: yup\n    .string()\n    .required()\n    .min(2, 'Username has to be at minimum 2 Characters long')\n    .max(8, 'Username can be at most 8 characters long')\n    .required(\"Username can't be empty\"),\n});\n\nfunction LoginForm() {\n  const history = useHistory();\n  return (\n    <Formik\n      validationSchema={schema}\n      validateOnChange={false}\n      onSubmit={(values, actions) => {\n        signInWithUsername(values.Username)\n          .then(() => {\n            actions.resetForm();\n            actions.setSubmitting(false);\n            history.push(ROUTES.HOME);\n          })\n          .catch((error) => {\n            actions.resetForm();\n            actions.setFieldError('Username', error.code);\n            actions.setSubmitting(false);\n          });\n      }}\n      initialValues={{\n        Username: '',\n      }}\n    >\n      {({ handleSubmit, handleChange, values, errors, isSubmitting }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Form.Group controlId=\"Username\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              name=\"Username\"\n              placeholder=\"Enter your Username\"\n              value={values.Username}\n              isInvalid={!!errors.Username}\n              onChange={handleChange}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.Username}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Button className=\"w-100\" type=\"submit\" disabled={isSubmitting}>\n            Log In\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nconst LoginPage = () => {\n  return (\n    <div className={styles.Container}>\n      <NavbarMod />\n      <Card bg=\"dark\" text=\"light\" className={styles.CardContainer}>\n        <Card.Body>\n          <h2 className={styles.CardText}>Log In</h2>\n          <LoginForm />\n        </Card.Body>\n        <div className={styles.CardText}>\n          Dont have an Account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport const Login = () => {\n  const { currentUser } = useAuth();\n  return currentUser ? <Redirect to={ROUTES.HOME} /> : <LoginPage />;\n};\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { Register } from '../components/Register';\nimport { Login } from '../components/Login';\nimport { SquareColorStart } from '../components/Training';\nimport { UserProvider } from '../components/Firebase';\nimport styles from './App.module.css';\n\nimport * as ROUTES from '../constants/routes';\n\nexport default function App() {\n  return (\n    <UserProvider>\n      <HashRouter>\n        <div className={styles.Container}>\n          <Switch>\n            <Route exact path={ROUTES.LOG_IN} component={Login} />\n            <Route exact path={ROUTES.SIGN_UP} component={Register} />\n            <Route\n              exact\n              path={ROUTES.SQUARECOLORS}\n              component={SquareColorStart}\n            />\n            <Route>\n              <h1 className={styles.error}>PAGE NOT FOUND</h1>\n            </Route>\n          </Switch>\n        </div>\n      </HashRouter>\n    </UserProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}